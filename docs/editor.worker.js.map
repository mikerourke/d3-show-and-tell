{"version":3,"sources":["../editor.worker.js","../webpack/bootstrap fa9a41755ce36c2149b9","../node_modules/monaco-editor/esm/vs/base/common/winjs.base.js","../node_modules/monaco-editor/esm/vs/editor/common/core/position.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/monaco-editor/esm/vs/editor/common/core/range.js","../node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","../node_modules/monaco-editor/esm/vs/base/common/event.js","../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/monaco-editor/esm/vs/base/common/errors.js","../node_modules/process/browser.js","../node_modules/webpack/buildin/global.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","../node_modules/monaco-editor/esm/vs/base/common/functional.js","../node_modules/monaco-editor/esm/vs/base/common/cancellation.js","../node_modules/monaco-editor/esm/vs/editor/editor.worker.js","../node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/base/common/map.js","../node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","../node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","../node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","../node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","../node_modules/monaco-editor/esm/vs/editor/common/core/token.js","../config","../node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","../node_modules/monaco-editor/esm/vs/base/common/async.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","global","process","Promise","TPromise","__winjs_exports","_modules","create","_winjs","deps","factory","exportsPassedIn","depsValues","map","dep","result","apply","window","self","_Global","markSupportedForProcessing","func","supportedForProcessing","hasWinRT","Windows","actualSetImmediate","_setImmediate","callback","setImmediate","bind","nextTick","setTimeout","msWriteProfilerMark","_WinJS","_BaseCoreUtils","_WriteProfilerMark","initializeProperties","target","members","prefix","properties","len","keys","isArray","Array","length","key","charCodeAt","member","undefined","value","set","forEach","writable","setName","defineProperties","createNamespace","parentNamespace","currentNamespace","namespaceFragments","split","splice","namespaceName","defineWithParent","define","lazy","f","state","LazyStates","uninitialized","initialized","working","moduleDefine","publicNS","push","_rootNamespace","Namespace","_lazy","_moduleDefine","constructor","instanceMembers","staticMembers","derive","baseClass","basePrototype","mix","arguments","Class","_Base","ErrorFromName","Error","message","this","createEventProperty","eventPropStateName","userHandler","handler","wrapper","evt","addEventListener","removeEventListener","createEventProperties","props","EventMixinEvent","type","detail","timeStamp","Date","now","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","_listeners","listener","useCapture","eventListeners","dispatchEvent","details","listeners","eventValue","slice","_createEventProperty","nop","v","_traceAsyncOperationStarting","Debug","msTraceAsyncOperationStarting","_traceAsyncOperationCompleted","msTraceAsyncOperationCompleted","_traceAsyncCallbackStarting","msTraceAsyncCallbackStarting","_traceAsyncCallbackCompleted","msTraceAsyncCallbackCompleted","_ErrorFromName","_Events","_Trace","_","completed","promise","targetState","then","state_waiting","state_success_notify","_value","_setState","createErrorDetails","exception","error","id","parent","detailsForHandledError","errorValue","context","_isException","errorId","_errorId","detailsForChainedError","setErrorInfo","detailsForError","error_number","detailsForException","exceptionValue","done","onComplete","onError","onProgress","pushListener","e","asyncOpID","onerrorDetails","callonerror","state_error_notify","notifySuccess","queue","MS_ASYNC_OP_STATUS_SUCCESS","_setCompleteValue","ex","_setExceptionValue","_state","CompletePromise","notifyError","errorID","canceledName","MS_ASYNC_OP_STATUS_CANCELED","MS_ASYNC_OP_STATUS_ERROR","asyncCallbackStarted","handlesOnError","_setChainedErrorValue","ErrorPromise","onerrorDetailsGenerator","promiseEventListeners","errorET","progress","_progress","isException","setErrorValue","state_error","setCompleteValue","state_success","ThenPromise","timeout","timeoutMS","clearTimeout","timeoutWithPromise","cancelPromise","cancel","cancelTimeout","setNonUserCodeExceptions","ListenerType","tagWithStack","tag","thenPromise","errorPromise","exceptionPromise","completePromise","all","state_created","state_working","state_waiting_canceled","state_canceled","state_canceling","enter","_completed","_error","_notify","_setErrorValue","waitedUpon","_chainedError","_cancelAction","shift","_cleanupAction","staticCanceledPromise","PromiseStateMachine","_nextState","_run","creator","_stack","_getStack","_creator","unused","_doneHandler","ExceptionPromise","newValue","init","oncancel","_oncancel","stack","eventType","capture","any","values","complete","canceled","as","is","join","errors","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","time","to","wrap","wrapError","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","_cancelBlocker","input","output","_StateMachine","PPromise","Position","lineNumber","column","equals","other","a","b","isBefore","isBeforeOrEqual","compare","aLineNumber","bLineNumber","clone","toString","lift","pos","isIPosition","obj","_encode","ch","toUpperCase","encodeURIComponent2","str","encodeURIComponent","replace","encodeNoop","_validateUri","ret","scheme","_schemePattern","test","path","authority","_singleSlashStart","_doubleSlashStart","_makeFsPath","uri","_driveLetterPath","toLowerCase","substr","__WEBPACK_IMPORTED_MODULE_0__platform_js__","_asFormatted","skipEncoding","encoder","parts","query","fragment","idx","indexOf","userinfo","_upperCaseDrive","exec","lastIdx","_slash","substring","_empty","__extends","extendStatics","setPrototypeOf","__proto__","__","_regexp","_driveLetter","URI","schemeOrData","isUri","thing","with","change","_URI","parse","match","decodeURIComponent","file","from","components","toJSON","res","$mid","fsPath","external","revive","data","_fsPath","_formatted","_super","_this","isWindows","isWeb","globals","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","platform","rawNlsConfig","NODE_ENV","PUBLIC_URL","nlsConfig","JSON","resolved","availableLanguages","locale","_translationsConfigFile","navigator","userAgent","language","Platform","Web","Mac","Linux","_globals","Range","__WEBPACK_IMPORTED_MODULE_0__position_js__","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","plusRange","Math","min","max","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","start","end","isIRange","areIntersectingOrTouching","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","toUint8","toUint32","Uint8Matrix","rows","cols","defaultValue","Uint8Array","_data","row","col","mapEvent","event","thisArgs","disposables","each","filterEvent","filter","latch","cache","firstCall","shouldEmit","Event","Emitter","__WEBPACK_IMPORTED_MODULE_0__lifecycle_js__","__WEBPACK_IMPORTED_MODULE_2__functional_js__","__WEBPACK_IMPORTED_MODULE_3__errors_js__","__WEBPACK_IMPORTED_MODULE_4__linkedList_js__","_disposable","dispose","None","_options","_event","firstListener","onFirstListenerAdd","remove","onFirstListenerDidAdd","onListenerDidAdd","_noop","_disposed","onLastListenerRemove","fire","_deliveryQueue","iter","iterator","next","_a","event_1","EventMultiplexer","hasListeners","events","emitter","add","hook","unhook","r","EventBufferer","buffers","wrapEvent","buffer","bufferEvents","fn","pop","flush","ChainableEvent","on","Relay","disposable","first","rest","_i","combinedDisposable","toDisposable","fns","fns_1","empty","Disposable","__WEBPACK_IMPORTED_MODULE_0__functional_js__","freeze","_toDispose","_register","t","ReferenceCollection","references","acquire","reference","counter","createReferencedObject","destroyReferencedObject","ImmortalReference","promiseErrorHandler","outstandingPromiseErrors","onUnexpectedError","console","log","isPromiseCanceledError","errorHandler","transformErrorForSerialization","$isError","stacktrace","__WEBPACK_IMPORTED_MODULE_0__winjs_base_js__","ErrorHandler","unexpectedErrorHandler","addListener","_removeListener","emit","setUnexpectedErrorHandler","newUnexpectedErrorHandler","getUnexpectedErrorHandler","onUnexpectedExternalError","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","run","Item","array","noop","args","title","browser","env","argv","version","versions","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","g","Function","eval","createStringSequence","getLength","getElementHash","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","__WEBPACK_IMPORTED_MODULE_0__diffChange_js__","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_originalIds","m_modifiedIds","m_forwardHistory","m_reverseHistory","ComputeUniqueIdentifiers","originalSequenceLength","modifiedSequenceLength","hashTable","currentUniqueId","originalElementHash","modifiedElementHash","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalStart","originalEnd","modifiedStart","modifiedEnd","quitEarlyArr","changes","ComputeDiffRecursive","ShiftChanges","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","getOriginalEnd","getModifiedEnd","numDifferences","maxDifferences","numDiagonals","delta","tempOriginalIndex","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","mergedDiffs","originalStop","modifiedStop","checkOriginal","originalLength","checkModified","modifiedLength","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","index","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","didCall","CancellationTokenSource","CancellationToken","__WEBPACK_IMPORTED_MODULE_0__event_js__","shortcutEvent","handle","isCancellationRequested","onCancellationRequested","Cancelled","MutableToken","_isCancelled","_emitter","_token","initialize","foreignModule","editorWorker","__WEBPACK_IMPORTED_MODULE_0__common_services_editorSimpleWorker_js__","simpleWorker","__WEBPACK_IMPORTED_MODULE_1__base_common_worker_simpleWorker_js__","msg","postMessage","onmessage","EditorSimpleWorkerImpl","__WEBPACK_IMPORTED_MODULE_0__base_common_uri_js__","__WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__","__WEBPACK_IMPORTED_MODULE_2__core_range_js__","__WEBPACK_IMPORTED_MODULE_3__diff_diffComputer_js__","__WEBPACK_IMPORTED_MODULE_4__base_common_diff_diff_js__","__WEBPACK_IMPORTED_MODULE_5__core_position_js__","__WEBPACK_IMPORTED_MODULE_6__model_mirrorTextModel_js__","__WEBPACK_IMPORTED_MODULE_7__modes_linkComputer_js__","__WEBPACK_IMPORTED_MODULE_8__modes_supports_inplaceReplaceSupport_js__","__WEBPACK_IMPORTED_MODULE_9__model_wordHelper_js__","__WEBPACK_IMPORTED_MODULE_10__standalone_standaloneBase_js__","__WEBPACK_IMPORTED_MODULE_11__base_common_platform_js__","MirrorModel","_uri","_versionId","_eol","getValue","getText","getLinesContent","_lines","getLineCount","getLineContent","getWordAtPosition","wordDefinition","wordAtText","getWordUntilPosition","wordAtPosition","word","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","content","lastIndex","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","_ensureLineStarts","_lineStarts","getAccumulatedValue","positionAt","offset","floor","out","getIndexOf","lineLength","remainder","hasChanged","maxCharacter","BaseEditorSimpleWorker","foreignModuleFactory","_foreignModuleFactory","_foreignModule","computeDiff","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","originalLines","modifiedLines","diffComputer","shouldPostProcessCharChanges","shouldIgnoreTrimWhitespace","shouldMakePrettyDiff","computeDirtyDiff","computeMoreMinimalEdits","modelUrl","edits","model","lastEol","edits_1","text","eol","_diffLimit","editOffset","_b","changes_1","newEdit","computeLinks","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","RegExp","currentWord","seen","_suggestionsLimit","isNaN","label","insertText","noAutoAccept","overwriteBefore","navigateValueSet","up","selectionText","wordRange","INSTANCE","loadForeignModule","createData","ctx","getMirrorModels","_getModels","methods","prop","resolve","__WEBPACK_AMD_REQUIRE_ARRAY__","code","catch","fmr","method","_models","acceptNewModel","url","lines","EOL","versionId","acceptModelChanged","strURL","onEvents","acceptRemovedModel","importScripts","monaco","modifiedSequence","__WEBPACK_IMPORTED_MODULE_0__base_common_diff_diff_js__","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","MINIMUM_MATCHING_CHARACTER_LENGTH","DiffComputer","__WEBPACK_IMPORTED_MODULE_1__base_common_strings_js__","MAXIMUM_RUN_TIME","MarkerSequence","startMarkers","endMarkers","getStartLineNumber","getStartColumn","getEndLineNumber","getEndColumn","LineMarkerSequence","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","txt","getCharSequence","startIndex","endIndex","startMarker","endMarker","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","length_2","opts","maximumRunTimeMs","computationStartTime","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","DiffChange","firstNonWhitespaceIndex","chCode","lastNonWhitespaceIndex","__WEBPACK_IMPORTED_MODULE_0__map_js__","String","fromCharCode","forEachable","LRUCache","Touch","__WEBPACK_IMPORTED_MODULE_0__uri_js__","StringIterator","_pos","reset","hasNext","cmp","PathIterator","_from","_to","justSeps","_fwd","_bwd","aPos","aLen","thisPos","TernarySearchTreeNode","mid","element","TernarySearchTree","segments","_iter","forPaths","forStrings","clear","_root","node","val","oldElement","delete","parent_1","findSubstr","candidate","findSuperstr","_forEach","ResourceMap","Map","ignoreCase","resource","toKey","has","size","clb","LinkedMap","_map","_head","_tail","_size","touch","item","previous","addItemLast","AsOld","addItemFirst","AsNew","removeItem","callbackfn","thisArg","current","trimOld","newSize","currentSize","fromJSON","data_1","limit","ratio","_limit","_ratio","checkTrim","peek","round","MirrorTextModel","__WEBPACK_IMPORTED_MODULE_0__viewModel_prefixSumComputer_js__","__WEBPACK_IMPORTED_MODULE_1__core_position_js__","_acceptDeleteRange","_acceptInsertText","eolLength","linesLength","lineStartValues","Uint32Array","_setLineText","lineIndex","changeValue","removeValues","insertLines","newLengths","insertValues","PrefixSumComputer","__WEBPACK_IMPORTED_MODULE_0__core_uint_js__","PrefixSumIndexOfResult","prefixSum","prefixSumValidIndex","Int32Array","getCount","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","cnt","maxCnt","getTotalValue","_getAccumulatedValue","accumulatedValue","midStop","midStart","low","high","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","getStateMachine","_stateMachine","StateMachine","getClassifier","_classifier","__WEBPACK_IMPORTED_MODULE_0__core_characterClassifier_js__","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","__WEBPACK_IMPORTED_MODULE_1__core_uint_js__","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","stateMachine","lineCount","j","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","CharacterClassifier","__WEBPACK_IMPORTED_MODULE_0__uint_js__","_defaultValue","_asciiMap","_createAsciiMap","asciiMap","charCode","CharacterSet","BasicInplaceReplace","_defaultValueSet","range1","text1","range2","text2","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","lastIndexOf","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","ensureValidWordDefinition","DEFAULT_WORD_REGEXP","flags","multiline","source","getWordAtPosFast","textOffset","getWordAtPosSlow","getWordAtText","USUAL_WORD_SEPARATORS","allowInWords","createMonacoBaseAPI","editor","languages","__WEBPACK_IMPORTED_MODULE_6__base_common_cancellation_js__","__WEBPACK_IMPORTED_MODULE_0__base_common_event_js__","KeyCode","KeyMod","__WEBPACK_IMPORTED_MODULE_2__core_position_js__","__WEBPACK_IMPORTED_MODULE_3__core_range_js__","Selection","__WEBPACK_IMPORTED_MODULE_4__core_selection_js__","SelectionDirection","Severity","MarkerSeverity","__WEBPACK_IMPORTED_MODULE_5__base_common_winjs_base_js__","Uri","__WEBPACK_IMPORTED_MODULE_8__base_common_uri_js__","Token","__WEBPACK_IMPORTED_MODULE_7__core_token_js__","__WEBPACK_IMPORTED_MODULE_1__base_common_keyCodes_js__","chord","firstPart","secondPart","CtrlCmd","Shift","Alt","WinCtrl","LinkedList","Node","_first","_last","unshift","insert","atTheEnd","newNode","oldLast","prev","oldFirst","anchor","toArray","KeyChord","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","getHashCode","isModifierKey","isDuplicateModifierCase","ChordKeybinding","chordPart","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","__WEBPACK_IMPORTED_MODULE_0__range_js__","__WEBPACK_IMPORTED_MODULE_1__position_js__","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","LTR","RTL","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","TokenizationResult","tokens","endState","TokenizationResult2","webpackEmptyContext","req","SimpleWorkerServer","__WEBPACK_IMPORTED_MODULE_0__errors_js__","__WEBPACK_IMPORTED_MODULE_1__lifecycle_js__","__WEBPACK_IMPORTED_MODULE_2__winjs_base_js__","__WEBPACK_IMPORTED_MODULE_3__async_js__","INITIALIZE","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","reply","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","seq","replyMessage","warn","err","requestMessage","strMsg","stringify","SimpleWorkerClient","workerFactory","lazyProxyFulfill","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","require","getConfig","requirejs","contexts","config","_lazyProxy","_onModuleLoaded","availableMethods","proxy","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","postSerializedMessage","requestHandler","_requestHandler","loaderConfig","baseUrl","paths","vs","catchError","cc","ee","handlerModule","isWinJSPromise","__WEBPACK_IMPORTED_MODULE_1__winjs_base_js__","always","winjsPromiseOrPromiseLike","e1","ShallowCancelThenPromise","__WEBPACK_IMPORTED_MODULE_3__lifecycle_js__","__WEBPACK_IMPORTED_MODULE_4__event_js__","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete_1","Delayer","SimpleThrottler","promiseTask","defaultDelay","completionPromise","onSuccess","task","trigger","delay","isTriggered","ThrottledDelayer","throttler","Barrier","_isOpen","_promise","_completePromise","isOpen","open","wait","outer","completeCallback","errorCallback","progressCallback","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","queueFor","queue_1","onFinished","TimeoutTimer","cancelAndSet","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","schedule","ThrottledEmitter","throttle","suspended","resume","lastEvent","hasLastEvent"],"mappings":"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","file":"editor.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/d3-show-and-tell/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Promise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return TPromise; });\n/* unused harmony export PPromise */\n/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\nvar __winjs_exports;\n\n(function() {\n\nvar _modules = Object.create(null);//{};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    var actualSetImmediate = null;\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: function (callback) {\n            // BEGIN monaco change\n            if (actualSetImmediate === null) {\n                if (_Global.setImmediate) {\n                    actualSetImmediate = _Global.setImmediate.bind(_Global);\n                } else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n                    actualSetImmediate = process.nextTick.bind(process);\n                } else {\n                    actualSetImmediate = _Global.setTimeout.bind(_Global);\n                }\n            }\n            actualSetImmediate(callback);\n            // END monaco change\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\n__winjs_exports = _modules[\"WinJS/Core/_WinJS\"];\n__winjs_exports.TPromise = __winjs_exports.Promise;\n__winjs_exports.PPromise = __winjs_exports.Promise;\n\n// ESM-comment-begin\n// if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n//     define([], __winjs_exports);\n// } else {\n//     module.exports = __winjs_exports;\n// }\n// ESM-comment-end\n\n})();\n\n// ESM-uncomment-begin\nvar Promise = __winjs_exports.Promise;\nvar TPromise = __winjs_exports.TPromise;\nvar PPromise = __winjs_exports.PPromise;\n// ESM-uncomment-end\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(10), __webpack_require__(9)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Position; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__platform_js__ = __webpack_require__(3);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nfunction _encode(ch) {\n    return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n}\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponent2(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n}\nfunction encodeNoop(str) {\n    return str.replace(/[#?]/, _encode);\n}\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret) {\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nvar _driveLetterPath = /^\\/[a-zA-Z]:/;\nvar _upperCaseDrive = /^(\\/)?([A-Z]:)/;\nvar _driveLetter = /^[a-zA-Z]:/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = path || _empty;\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n         * uses the platform specific path separator. Will *not* validate the path for\n         * invalid characters and semantics. Will *not* look at the scheme of this URI.\n         */\n        get: function () {\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === void 0) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === void 0) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === void 0) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === void 0) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === void 0) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    URI.parse = function (value) {\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty));\n    };\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (__WEBPACK_IMPORTED_MODULE_0__platform_js__[\"c\" /* isWindows */]) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        // Ensure that path starts with a slash\n        // or that it is at least a slash\n        if (_driveLetter.test(path)) {\n            path = _slash + path;\n        }\n        else if (path[0] !== _slash) {\n            // tricky -> makes invalid paths\n            // but otherwise we have to stop\n            // allowing relative paths...\n            path = _slash + path;\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1,\n            fsPath: this.fsPath,\n            external: this.toString(),\n        };\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\n/* harmony default export */ __webpack_exports__[\"a\"] = (URI);\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    return _URI;\n}(URI));\n/**\n * Compute `fsPath` for the given uri\n * @param uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (_driveLetterPath.test(uri.path)) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (__WEBPACK_IMPORTED_MODULE_0__platform_js__[\"c\" /* isWindows */]) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponent2\n        : encodeNoop;\n    var parts = [];\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        parts.push(scheme, ':');\n    }\n    if (authority || scheme === 'file') {\n        parts.push('//');\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                parts.push(encoder(userinfo));\n            }\n            else {\n                parts.push(encoder(userinfo.substr(0, idx)), ':', encoder(userinfo.substr(idx + 1)));\n            }\n            parts.push('@');\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            parts.push(encoder(authority));\n        }\n        else {\n            parts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        var m = _upperCaseDrive.exec(path);\n        if (m) {\n            if (m[1]) {\n                path = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n            }\n            else {\n                path = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n            }\n        }\n        // encode every segement but not slashes\n        // make sure that # and ? are always encoded\n        // when occurring in paths - otherwise the result\n        // cannot be parsed back again\n        var lastIdx = 0;\n        while (true) {\n            var idx = path.indexOf(_slash, lastIdx);\n            if (idx === -1) {\n                parts.push(encoder(path.substring(lastIdx)));\n                break;\n            }\n            parts.push(encoder(path.substring(lastIdx, idx)), _slash);\n            lastIdx = idx + 1;\n        }\n    }\n    if (query) {\n        parts.push('?', encoder(query));\n    }\n    if (fragment) {\n        parts.push('#', encoder(fragment));\n    }\n    return parts.join(_empty);\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process, global) {/* unused harmony export LANGUAGE_DEFAULT */\n/* unused harmony export Platform */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return isWindows; });\n/* unused harmony export isMacintosh */\n/* unused harmony export isLinux */\n/* unused harmony export isNative */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isWeb; });\n/* unused harmony export platform */\n/* unused harmony export isRootUser */\n/* unused harmony export language */\n/* unused harmony export locale */\n/* unused harmony export translationsConfigFile */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return globals; });\n/* unused harmony export setImmediate */\n/* unused harmony export OS */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = undefined;\nvar _translationsConfigFile = undefined;\nvar LANGUAGE_DEFAULT = 'en';\n// OS detection\nif (typeof process === 'object' && typeof process.nextTick === 'function' && typeof process.platform === 'string') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    var rawNlsConfig = Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/d3-show-and-tell\"})['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nvar Platform;\n(function (Platform) {\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n})(Platform || (Platform = {}));\nvar _platform = Platform.Web;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = Platform.Mac;\n    }\n    else if (_isWindows) {\n        _platform = Platform.Windows;\n    }\n    else if (_isLinux) {\n        _platform = Platform.Linux;\n    }\n}\nvar isWindows = _isWindows;\nvar isMacintosh = _isMacintosh;\nvar isLinux = _isLinux;\nvar isNative = _isNative;\nvar isWeb = _isWeb;\nvar platform = _platform;\nfunction isRootUser() {\n    return _isNative && !_isWindows && (process.getuid() === 0);\n}\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nvar language = _language;\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nvar locale = _locale;\n/**\n * The translatios that are available through language packs.\n */\nvar translationsConfigFile = _translationsConfigFile;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nvar globals = _globals;\nvar _setImmediate = null;\nfunction setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nvar OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(9), __webpack_require__(10)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Range; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__position_js__ = __webpack_require__(1);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new __WEBPACK_IMPORTED_MODULE_0__position_js__[\"a\" /* Position */](this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new __WEBPACK_IMPORTED_MODULE_0__position_js__[\"a\" /* Position */](this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Range` from an `IRange`.\n     */\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        var aStartLineNumber = a.startLineNumber | 0;\n        var bStartLineNumber = b.startLineNumber | 0;\n        if (aStartLineNumber === bStartLineNumber) {\n            var aStartColumn = a.startColumn | 0;\n            var bStartColumn = b.startColumn | 0;\n            if (aStartColumn === bStartColumn) {\n                var aEndLineNumber = a.endLineNumber | 0;\n                var bEndLineNumber = b.endLineNumber | 0;\n                if (aEndLineNumber === bEndLineNumber) {\n                    var aEndColumn = a.endColumn | 0;\n                    var bEndColumn = b.endColumn | 0;\n                    return aEndColumn - bEndColumn;\n                }\n                return aEndLineNumber - bEndLineNumber;\n            }\n            return aStartColumn - bStartColumn;\n        }\n        return aStartLineNumber - bStartLineNumber;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Uint8Matrix; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = toUint8;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = toUint32;\n/* unused harmony export toUint32Array */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\n\nfunction toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nfunction toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nfunction toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Event; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Emitter; });\n/* unused harmony export EventMultiplexer */\n/* unused harmony export fromCallback */\n/* unused harmony export fromPromise */\n/* unused harmony export toPromise */\n/* unused harmony export once */\n/* unused harmony export anyEvent */\n/* unused harmony export debounceEvent */\n/* unused harmony export EventBufferer */\n/* unused harmony export mapEvent */\n/* unused harmony export forEach */\n/* unused harmony export filterEvent */\n/* unused harmony export chain */\n/* unused harmony export stopwatch */\n/* unused harmony export buffer */\n/* unused harmony export echo */\n/* unused harmony export Relay */\n/* unused harmony export fromNodeEventEmitter */\n/* unused harmony export latch */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lifecycle_js__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__functional_js__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__errors_js__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__linkedList_js__ = __webpack_require__(27);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\nvar Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n})(Event || (Event = {}));\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(_options) {\n        this._options = _options;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new __WEBPACK_IMPORTED_MODULE_4__linkedList_js__[\"a\" /* LinkedList */]();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove && _this._listeners.isEmpty()) {\n                                    _this._options.onLastListenerRemove(_this);\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    Object(__WEBPACK_IMPORTED_MODULE_3__errors_js__[\"c\" /* onUnexpectedError */])(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\n\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return Object(__WEBPACK_IMPORTED_MODULE_0__lifecycle_js__[\"d\" /* toDisposable */])(Object(__WEBPACK_IMPORTED_MODULE_2__functional_js__[\"a\" /* once */])(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        e.listener.dispose();\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\n\nfunction fromCallback(fn) {\n    var listener;\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () { return listener = fn(function (e) { return emitter.fire(e); }); },\n        onLastListenerRemove: function () { return listener.dispose(); }\n    });\n    return emitter.event;\n}\nfunction fromPromise(promise) {\n    var emitter = new Emitter();\n    var shouldEmit = false;\n    promise\n        .then(null, function () { return null; })\n        .then(function () {\n        if (!shouldEmit) {\n            setTimeout(function () { return emitter.fire(); }, 0);\n        }\n        else {\n            emitter.fire();\n        }\n    });\n    shouldEmit = true;\n    return emitter.event;\n}\nfunction toPromise(event) {\n    return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (complete) {\n        var sub = event(function (e) {\n            sub.dispose();\n            complete(e);\n        });\n    });\n}\nfunction once(event) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        var result = event(function (e) {\n            result.dispose();\n            return listener.call(thisArgs, e);\n        }, null, disposables);\n        return result;\n    };\n}\nfunction anyEvent() {\n    var events = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        events[_i] = arguments[_i];\n    }\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return Object(__WEBPACK_IMPORTED_MODULE_0__lifecycle_js__[\"b\" /* combinedDisposable */])(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n    };\n}\nfunction debounceEvent(event, merger, delay, leading) {\n    if (delay === void 0) { delay = 100; }\n    if (leading === void 0) { leading = false; }\n    var subscription;\n    var output = undefined;\n    var handle = undefined;\n    var numDebouncedCalls = 0;\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () {\n            subscription = event(function (cur) {\n                numDebouncedCalls++;\n                output = merger(output, cur);\n                if (leading && !handle) {\n                    emitter.fire(output);\n                }\n                clearTimeout(handle);\n                handle = setTimeout(function () {\n                    var _output = output;\n                    output = undefined;\n                    handle = undefined;\n                    if (!leading || numDebouncedCalls > 1) {\n                        emitter.fire(_output);\n                    }\n                    numDebouncedCalls = 0;\n                }, delay);\n            });\n        },\n        onLastListenerRemove: function () {\n            subscription.dispose();\n        }\n    });\n    return emitter.event;\n}\n/**\n * The EventDelayer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, void 0, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n    };\n    return EventBufferer;\n}());\n\nfunction mapEvent(event, map) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n    };\n}\nfunction forEach(event, each) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n    };\n}\nfunction filterEvent(event, filter) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n    };\n}\nvar ChainableEvent = /** @class */ (function () {\n    function ChainableEvent(_event) {\n        this._event = _event;\n    }\n    Object.defineProperty(ChainableEvent.prototype, \"event\", {\n        get: function () { return this._event; },\n        enumerable: true,\n        configurable: true\n    });\n    ChainableEvent.prototype.map = function (fn) {\n        return new ChainableEvent(mapEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.forEach = function (fn) {\n        return new ChainableEvent(forEach(this._event, fn));\n    };\n    ChainableEvent.prototype.filter = function (fn) {\n        return new ChainableEvent(filterEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.latch = function () {\n        return new ChainableEvent(latch(this._event));\n    };\n    ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n        return this._event(listener, thisArgs, disposables);\n    };\n    return ChainableEvent;\n}());\nfunction chain(event) {\n    return new ChainableEvent(event);\n}\nfunction stopwatch(event) {\n    var start = new Date().getTime();\n    return mapEvent(once(event), function (_) { return new Date().getTime() - start; });\n}\n/**\n * Buffers the provided event until a first listener comes\n * along, at which point fire all the events at once and\n * pipe the event from then on.\n *\n * ```typescript\n * const emitter = new Emitter<number>();\n * const event = emitter.event;\n * const bufferedEvent = buffer(event);\n *\n * emitter.fire(1);\n * emitter.fire(2);\n * emitter.fire(3);\n * // nothing...\n *\n * const listener = bufferedEvent(num => console.log(num));\n * // 1, 2, 3\n *\n * emitter.fire(4);\n * // 4\n * ```\n */\nfunction buffer(event, nextTick, buffer) {\n    if (nextTick === void 0) { nextTick = false; }\n    if (buffer === void 0) { buffer = []; }\n    buffer = buffer.slice();\n    var listener = event(function (e) {\n        if (buffer) {\n            buffer.push(e);\n        }\n        else {\n            emitter.fire(e);\n        }\n    });\n    var flush = function () {\n        buffer.forEach(function (e) { return emitter.fire(e); });\n        buffer = null;\n    };\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () {\n            if (!listener) {\n                listener = event(function (e) { return emitter.fire(e); });\n            }\n        },\n        onFirstListenerDidAdd: function () {\n            if (buffer) {\n                if (nextTick) {\n                    setTimeout(flush);\n                }\n                else {\n                    flush();\n                }\n            }\n        },\n        onLastListenerRemove: function () {\n            listener.dispose();\n            listener = null;\n        }\n    });\n    return emitter.event;\n}\n/**\n * Similar to `buffer` but it buffers indefinitely and repeats\n * the buffered events to every new listener.\n */\nfunction echo(event, nextTick, buffer) {\n    if (nextTick === void 0) { nextTick = false; }\n    if (buffer === void 0) { buffer = []; }\n    buffer = buffer.slice();\n    event(function (e) {\n        buffer.push(e);\n        emitter.fire(e);\n    });\n    var flush = function (listener, thisArgs) { return buffer.forEach(function (e) { return listener.call(thisArgs, e); }); };\n    var emitter = new Emitter({\n        onListenerDidAdd: function (emitter, listener, thisArgs) {\n            if (nextTick) {\n                setTimeout(function () { return flush(listener, thisArgs); });\n            }\n            else {\n                flush(listener, thisArgs);\n            }\n        }\n    });\n    return emitter.event;\n}\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        this.emitter = new Emitter();\n        this.event = this.emitter.event;\n        this.disposable = __WEBPACK_IMPORTED_MODULE_0__lifecycle_js__[\"c\" /* empty */];\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.disposable.dispose();\n            this.disposable = event(this.emitter.fire, this.emitter);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.disposable.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\n\nfunction fromNodeEventEmitter(emitter, eventName, map) {\n    if (map === void 0) { map = function (id) { return id; }; }\n    var fn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return result.fire(map.apply(void 0, args));\n    };\n    var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n    var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n    var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n    return result.event;\n}\nfunction latch(event) {\n    var firstCall = true;\n    var cache;\n    return filterEvent(event, function (value) {\n        var shouldEmit = firstCall || value !== cache;\n        firstCall = false;\n        cache = value;\n        return shouldEmit;\n    });\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return empty; });\n/* unused harmony export isDisposable */\n/* unused harmony export dispose */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = combinedDisposable;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = toDisposable;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Disposable; });\n/* unused harmony export ReferenceCollection */\n/* unused harmony export ImmortalReference */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__functional_js__ = __webpack_require__(12);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar empty = Object.freeze({\n    dispose: function () { }\n});\nfunction isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nfunction dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nfunction combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nfunction toDisposable() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return {\n        dispose: function () {\n            for (var _i = 0, fns_1 = fns; _i < fns_1.length; _i++) {\n                var fn = fns_1[_i];\n                fn();\n            }\n        }\n    };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n    }\n    Disposable.prototype.dispose = function () {\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        this._toDispose.push(t);\n        return t;\n    };\n    return Disposable;\n}());\n\nvar ReferenceCollection = /** @class */ (function () {\n    function ReferenceCollection() {\n        this.references = Object.create(null);\n    }\n    ReferenceCollection.prototype.acquire = function (key) {\n        var _this = this;\n        var reference = this.references[key];\n        if (!reference) {\n            reference = this.references[key] = { counter: 0, object: this.createReferencedObject(key) };\n        }\n        var object = reference.object;\n        var dispose = Object(__WEBPACK_IMPORTED_MODULE_0__functional_js__[\"a\" /* once */])(function () {\n            if (--reference.counter === 0) {\n                _this.destroyReferencedObject(reference.object);\n                delete _this.references[key];\n            }\n        });\n        reference.counter++;\n        return { object: object, dispose: dispose };\n    };\n    return ReferenceCollection;\n}());\n\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\n\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export ErrorHandler */\n/* unused harmony export errorHandler */\n/* unused harmony export setUnexpectedErrorHandler */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = onUnexpectedError;\n/* unused harmony export onUnexpectedExternalError */\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = transformErrorForSerialization;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isPromiseCanceledError;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = canceled;\n/* unused harmony export illegalArgument */\n/* unused harmony export illegalState */\n/* unused harmony export readonly */\n/* unused harmony export disposed */\n/* unused harmony export isErrorWithActions */\n/* unused harmony export create */\n/* unused harmony export getErrorMessage */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__winjs_base_js__ = __webpack_require__(0);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n// ------ BEGIN Hook up error listeners to winjs promises\nvar outstandingPromiseErrors = {};\nfunction promiseErrorHandler(e) {\n    //\n    // e.detail looks like: { exception, error, promise, handler, id, parent }\n    //\n    var details = e.detail;\n    var id = details.id;\n    // If the error has a parent promise then this is not the origination of the\n    //  error so we check if it has a handler, and if so we mark that the error\n    //  was handled by removing it from outstandingPromiseErrors\n    //\n    if (details.parent) {\n        if (details.handler && outstandingPromiseErrors) {\n            delete outstandingPromiseErrors[id];\n        }\n        return;\n    }\n    // Indicate that this error was originated and needs to be handled\n    outstandingPromiseErrors[id] = details;\n    // The first time the queue fills up this iteration, schedule a timeout to\n    // check if any errors are still unhandled.\n    if (Object.keys(outstandingPromiseErrors).length === 1) {\n        setTimeout(function () {\n            var errors = outstandingPromiseErrors;\n            outstandingPromiseErrors = {};\n            Object.keys(errors).forEach(function (errorId) {\n                var error = errors[errorId];\n                if (error.exception) {\n                    onUnexpectedError(error.exception);\n                }\n                else if (error.error) {\n                    onUnexpectedError(error.error);\n                }\n                console.log('WARNING: Promise with no error callback:' + error.id);\n                console.log(error);\n                if (error.exception) {\n                    console.log(error.exception.stack);\n                }\n            });\n        }, 0);\n    }\n}\n__WEBPACK_IMPORTED_MODULE_0__winjs_base_js__[\"b\" /* TPromise */].addEventListener('error', promiseErrorHandler);\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.addListener = function (listener) {\n        var _this = this;\n        this.listeners.push(listener);\n        return function () {\n            _this._removeListener(listener);\n        };\n    };\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype._removeListener = function (listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    };\n    ErrorHandler.prototype.setUnexpectedErrorHandler = function (newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    };\n    ErrorHandler.prototype.getUnexpectedErrorHandler = function () {\n        return this.unexpectedErrorHandler;\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\n\nvar errorHandler = new ErrorHandler();\nfunction setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nfunction onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nfunction isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nfunction canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nfunction readonly(name) {\n    return name\n        ? new Error(\"readonly property '\" + name + \" cannot be changed'\")\n        : new Error('readonly property cannot be changed');\n}\nfunction disposed(what) {\n    var result = new Error(what + \" has been disposed\");\n    result.name = 'DISPOSED';\n    return result;\n}\nfunction isErrorWithActions(obj) {\n    return obj instanceof Error && Array.isArray(obj.actions);\n}\nfunction create(message, options) {\n    if (options === void 0) { options = Object.create(null); }\n    var result = new Error(message);\n    if (options.actions) {\n        result.actions = options.actions;\n    }\n    return result;\n}\nfunction getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = stringDiff;\n/* unused harmony export Debug */\n/* unused harmony export MyArray */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LcsDiff; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__diffChange_js__ = __webpack_require__(17);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementHash: function (pos) { return a[pos]; }\n    };\n}\nfunction stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\n\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new __WEBPACK_IMPORTED_MODULE_0__diffChange_js__[\"a\" /* DiffChange */](this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_originalIds = [];\n        this.m_modifiedIds = [];\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        this.ComputeUniqueIdentifiers();\n    }\n    LcsDiff.prototype.ComputeUniqueIdentifiers = function () {\n        var originalSequenceLength = this.OriginalSequence.getLength();\n        var modifiedSequenceLength = this.ModifiedSequence.getLength();\n        this.m_originalIds = new Array(originalSequenceLength);\n        this.m_modifiedIds = new Array(modifiedSequenceLength);\n        // Create a new hash table for unique elements from the original\n        // sequence.\n        var hashTable = {};\n        var currentUniqueId = 1;\n        var i;\n        // Fill up the hash table for unique elements\n        for (i = 0; i < originalSequenceLength; i++) {\n            var originalElementHash = this.OriginalSequence.getElementHash(i);\n            if (!hasOwnProperty.call(hashTable, originalElementHash)) {\n                // No entry in the hashtable so this is a new unique element.\n                // Assign the element a new unique identifier and add it to the\n                // hash table\n                this.m_originalIds[i] = currentUniqueId++;\n                hashTable[originalElementHash] = this.m_originalIds[i];\n            }\n            else {\n                this.m_originalIds[i] = hashTable[originalElementHash];\n            }\n        }\n        // Now match up modified elements\n        for (i = 0; i < modifiedSequenceLength; i++) {\n            var modifiedElementHash = this.ModifiedSequence.getElementHash(i);\n            if (!hasOwnProperty.call(hashTable, modifiedElementHash)) {\n                this.m_modifiedIds[i] = currentUniqueId++;\n                hashTable[modifiedElementHash] = this.m_modifiedIds[i];\n            }\n            else {\n                this.m_modifiedIds[i] = hashTable[modifiedElementHash];\n            }\n        }\n    };\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return this.m_originalIds[originalIndex] === this.m_modifiedIds[newIndex];\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return this.m_originalIds[index1] === this.m_originalIds[index2];\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return this.m_modifiedIds[index1] === this.m_modifiedIds[index2];\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.ShiftChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new __WEBPACK_IMPORTED_MODULE_0__diffChange_js__[\"a\" /* DiffChange */](originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new __WEBPACK_IMPORTED_MODULE_0__diffChange_js__[\"a\" /* DiffChange */](originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new __WEBPACK_IMPORTED_MODULE_0__diffChange_js__[\"a\" /* DiffChange */](midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new __WEBPACK_IMPORTED_MODULE_0__diffChange_js__[\"a\" /* DiffChange */](originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new __WEBPACK_IMPORTED_MODULE_0__diffChange_js__[\"a\" /* DiffChange */](originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex, modifiedIndex;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new __WEBPACK_IMPORTED_MODULE_0__diffChange_js__[\"a\" /* DiffChange */](originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.ShiftChanges = function (changes) {\n        var mergedDiffs;\n        do {\n            mergedDiffs = false;\n            // Shift all the changes down first\n            for (var i = 0; i < changes.length; i++) {\n                var change = changes[i];\n                var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n                var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n                var checkOriginal = change.originalLength > 0;\n                var checkModified = change.modifiedLength > 0;\n                while (change.originalStart + change.originalLength < originalStop &&\n                    change.modifiedStart + change.modifiedLength < modifiedStop &&\n                    (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                    (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                    change.originalStart++;\n                    change.modifiedStart++;\n                }\n            }\n            // Build up the new list (we have to build a new list because we\n            // might have changes we can merge together now)\n            var result = new Array();\n            var mergedChangeArr = [null];\n            for (var i = 0; i < changes.length; i++) {\n                if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                    mergedDiffs = true;\n                    result.push(mergedChangeArr[0]);\n                    i++;\n                }\n                else {\n                    result.push(changes[i]);\n                }\n            }\n            changes = result;\n        } while (mergedDiffs);\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        return /^\\s*$/.test(this.OriginalSequence.getElementHash(index));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        return /^\\s*$/.test(this.ModifiedSequence.getElementHash(index));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        var result = null;\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new __WEBPACK_IMPORTED_MODULE_0__diffChange_js__[\"a\" /* DiffChange */](originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\n\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = once;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export CancellationToken */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CancellationTokenSource; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__event_js__ = __webpack_require__(6);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: __WEBPACK_IMPORTED_MODULE_0__event_js__[\"b\" /* Event */].None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new __WEBPACK_IMPORTED_MODULE_0__event_js__[\"a\" /* Emitter */]();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\n\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"initialize\"] = initialize;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_services_editorSimpleWorker_js__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base_common_worker_simpleWorker_js__ = __webpack_require__(32);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar initialized = false;\nfunction initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new __WEBPACK_IMPORTED_MODULE_0__common_services_editorSimpleWorker_js__[\"a\" /* EditorSimpleWorkerImpl */](foreignModule);\n    var simpleWorker = new __WEBPACK_IMPORTED_MODULE_1__base_common_worker_simpleWorker_js__[\"a\" /* SimpleWorkerServer */](function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export BaseEditorSimpleWorker */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return EditorSimpleWorkerImpl; });\n/* unused harmony export create */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_common_uri_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_range_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__diff_diffComputer_js__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base_common_diff_diff_js__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_position_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__model_mirrorTextModel_js__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__modes_linkComputer_js__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__modes_supports_inplaceReplaceSupport_js__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__model_wordHelper_js__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__standalone_standaloneBase_js__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__base_common_platform_js__ = __webpack_require__(3);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = Object(__WEBPACK_IMPORTED_MODULE_9__model_wordHelper_js__[\"b\" /* getWordAtText */])(position.column, Object(__WEBPACK_IMPORTED_MODULE_9__model_wordHelper_js__[\"a\" /* ensureValidWordDefinition */])(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new __WEBPACK_IMPORTED_MODULE_2__core_range_js__[\"a\" /* Range */](position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj = {\n            done: false,\n            value: ''\n        };\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                obj.done = false;\n                obj.value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                obj.done = true;\n                obj.value = undefined;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n            return obj;\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!__WEBPACK_IMPORTED_MODULE_5__core_position_js__[\"a\" /* Position */].isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(__WEBPACK_IMPORTED_MODULE_6__model_mirrorTextModel_js__[\"a\" /* MirrorTextModel */]));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new __WEBPACK_IMPORTED_MODULE_3__diff_diffComputer_js__[\"a\" /* DiffComputer */](originalLines, modifiedLines, {\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as(diffComputer.computeDiff());\n    };\n    BaseEditorSimpleWorker.prototype.computeDirtyDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new __WEBPACK_IMPORTED_MODULE_3__diff_diffComputer_js__[\"a\" /* DiffComputer */](originalLines, modifiedLines, {\n            shouldPostProcessCharChanges: false,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as(diffComputer.computeDiff());\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as(edits);\n        }\n        var result = [];\n        var lastEol;\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (!range) {\n                // eol-change only\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = Object(__WEBPACK_IMPORTED_MODULE_4__base_common_diff_diff_js__[\"b\" /* stringDiff */])(original, text, false);\n            var editOffset = model.offsetAt(__WEBPACK_IMPORTED_MODULE_2__core_range_js__[\"a\" /* Range */].lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: undefined, range: undefined });\n        }\n        return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as(Object(__WEBPACK_IMPORTED_MODULE_7__modes_linkComputer_js__[\"a\" /* computeLinks */])(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (model) {\n            var suggestions = [];\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            var currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\n            var seen = Object.create(null);\n            seen[currentWord] = true;\n            for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n                var word = e.value;\n                if (seen[word]) {\n                    continue;\n                }\n                seen[word] = true;\n                if (!isNaN(Number(word))) {\n                    continue;\n                }\n                suggestions.push({\n                    type: 'text',\n                    label: word,\n                    insertText: word,\n                    noAutoAccept: true,\n                    overwriteBefore: currentWord.length\n                });\n            }\n            return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as({ suggestions: suggestions });\n        }\n        return undefined;\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        var word = null;\n        if (wordRange !== null) {\n            word = model.getValueInRange(wordRange);\n        }\n        var result = __WEBPACK_IMPORTED_MODULE_8__modes_supports_inplaceReplaceSupport_js__[\"a\" /* BasicInplaceReplace */].INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var prop in this._foreignModule) {\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as(methods);\n        }\n        return new __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */](function (c, e) {\n            new Promise(function(resolve) { resolve(); }).then(function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\".\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())]; ((function (foreignModule) {\n                _this._foreignModule = foreignModule.create(ctx, createData);\n                var methods = [];\n                for (var prop in _this._foreignModule) {\n                    if (typeof _this._foreignModule[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                c(methods);\n            }).apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}).catch(e.bind(this));\n        });\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].as(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return __WEBPACK_IMPORTED_MODULE_1__base_common_winjs_base_js__[\"b\" /* TPromise */].wrapError(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\n\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(__WEBPACK_IMPORTED_MODULE_0__base_common_uri_js__[\"a\" /* default */].parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\n\n/**\n * Called on the worker side\n * @internal\n */\nfunction create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    __WEBPACK_IMPORTED_MODULE_11__base_common_platform_js__[\"a\" /* globals */].monaco = Object(__WEBPACK_IMPORTED_MODULE_10__standalone_standaloneBase_js__[\"a\" /* createMonacoBaseAPI */])();\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DiffComputer; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_common_diff_diff_js__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base_common_strings_js__ = __webpack_require__(18);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new __WEBPACK_IMPORTED_MODULE_0__base_common_diff_diff_js__[\"a\" /* LcsDiff */](originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar MarkerSequence = /** @class */ (function () {\n    function MarkerSequence(buffer, startMarkers, endMarkers) {\n        this.buffer = buffer;\n        this.startMarkers = startMarkers;\n        this.endMarkers = endMarkers;\n    }\n    MarkerSequence.prototype.getLength = function () {\n        return this.startMarkers.length;\n    };\n    MarkerSequence.prototype.getElementHash = function (i) {\n        return this.buffer.substring(this.startMarkers[i].offset, this.endMarkers[i].offset);\n    };\n    MarkerSequence.prototype.getStartLineNumber = function (i) {\n        if (i === this.startMarkers.length) {\n            // This is the special case where a change happened after the last marker\n            return this.startMarkers[i - 1].lineNumber + 1;\n        }\n        return this.startMarkers[i].lineNumber;\n    };\n    MarkerSequence.prototype.getStartColumn = function (i) {\n        return this.startMarkers[i].column;\n    };\n    MarkerSequence.prototype.getEndLineNumber = function (i) {\n        return this.endMarkers[i].lineNumber;\n    };\n    MarkerSequence.prototype.getEndColumn = function (i) {\n        return this.endMarkers[i].column;\n    };\n    return MarkerSequence;\n}());\nvar LineMarkerSequence = /** @class */ (function (_super) {\n    __extends(LineMarkerSequence, _super);\n    function LineMarkerSequence(lines) {\n        var _this = this;\n        var buffer = '';\n        var startMarkers = [];\n        var endMarkers = [];\n        for (var pos = 0, i = 0, length_1 = lines.length; i < length_1; i++) {\n            buffer += lines[i];\n            var startColumn = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            var endColumn = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n            startMarkers.push({\n                offset: pos + startColumn - 1,\n                lineNumber: i + 1,\n                column: startColumn\n            });\n            endMarkers.push({\n                offset: pos + endColumn - 1,\n                lineNumber: i + 1,\n                column: endColumn\n            });\n            pos += lines[i].length;\n        }\n        _this = _super.call(this, buffer, startMarkers, endMarkers) || this;\n        return _this;\n    }\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = __WEBPACK_IMPORTED_MODULE_1__base_common_strings_js__[\"a\" /* firstNonWhitespaceIndex */](txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = __WEBPACK_IMPORTED_MODULE_1__base_common_strings_js__[\"b\" /* lastNonWhitespaceIndex */](txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (startIndex, endIndex) {\n        var startMarkers = [];\n        var endMarkers = [];\n        for (var index = startIndex; index <= endIndex; index++) {\n            var startMarker = this.startMarkers[index];\n            var endMarker = this.endMarkers[index];\n            for (var i = startMarker.offset; i < endMarker.offset; i++) {\n                startMarkers.push({\n                    offset: i,\n                    lineNumber: startMarker.lineNumber,\n                    column: startMarker.column + (i - startMarker.offset)\n                });\n                endMarkers.push({\n                    offset: i + 1,\n                    lineNumber: startMarker.lineNumber,\n                    column: startMarker.column + (i - startMarker.offset) + 1\n                });\n            }\n        }\n        return new MarkerSequence(this.buffer, startMarkers, endMarkers);\n    };\n    return LineMarkerSequence;\n}(MarkerSequence));\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementHash(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementHash(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, [\n            new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)\n        ]));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\n\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DiffChange; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\n\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export empty */\n/* unused harmony export isFalsyOrWhitespace */\n/* unused harmony export pad */\n/* unused harmony export format */\n/* unused harmony export escape */\n/* unused harmony export escapeRegExpCharacters */\n/* unused harmony export trim */\n/* unused harmony export ltrim */\n/* unused harmony export rtrim */\n/* unused harmony export convertSimple2RegExpPattern */\n/* unused harmony export stripWildcards */\n/* unused harmony export startsWith */\n/* unused harmony export endsWith */\n/* unused harmony export createRegExp */\n/* unused harmony export regExpLeadsToEndlessLoop */\n/* unused harmony export regExpContainsBackreference */\n/* unused harmony export canNormalize */\n/* unused harmony export normalizeNFC */\n/* unused harmony export normalizeNFD */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = firstNonWhitespaceIndex;\n/* unused harmony export getLeadingWhitespace */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = lastNonWhitespaceIndex;\n/* unused harmony export compare */\n/* unused harmony export compareIgnoreCase */\n/* unused harmony export equalsIgnoreCase */\n/* unused harmony export startsWithIgnoreCase */\n/* unused harmony export commonPrefixLength */\n/* unused harmony export commonSuffixLength */\n/* unused harmony export overlap */\n/* unused harmony export isHighSurrogate */\n/* unused harmony export isLowSurrogate */\n/* unused harmony export containsRTL */\n/* unused harmony export containsEmoji */\n/* unused harmony export isBasicASCII */\n/* unused harmony export containsFullWidthCharacter */\n/* unused harmony export isFullWidthCharacter */\n/* unused harmony export lcut */\n/* unused harmony export removeAnsiEscapeCodes */\n/* unused harmony export UTF8_BOM_CHARACTER */\n/* unused harmony export startsWithUTF8BOM */\n/* unused harmony export stripUTF8BOM */\n/* unused harmony export safeBtoa */\n/* unused harmony export repeat */\n/* unused harmony export fuzzyContains */\n/* unused harmony export containsUppercaseCharacter */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__map_js__ = __webpack_require__(19);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n/**\n * The empty string.\n */\nvar empty = '';\nfunction isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nfunction pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nfunction format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nfunction escape(html) {\n    return html.replace(/[<|>|&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nfunction trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nfunction ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0, idx = -1;\n    while ((idx = haystack.indexOf(needle, offset)) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nfunction rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nfunction stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\n/**\n * Determines if haystack starts with needle.\n */\nfunction startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nfunction endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nfunction createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    return new RegExp(searchString, modifiers);\n}\nfunction regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return (match && regexp.lastIndex === 0);\n}\nfunction regExpContainsBackreference(regexpValue) {\n    return !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nvar canNormalize = typeof (''.normalize) === 'function';\nvar nfcCache = new __WEBPACK_IMPORTED_MODULE_0__map_js__[\"a\" /* LRUCache */](10000); // bounded to 10000 elements\nfunction normalizeNFC(str) {\n    return normalize(str, 'NFC', nfcCache);\n}\nvar nfdCache = new __WEBPACK_IMPORTED_MODULE_0__map_js__[\"a\" /* LRUCache */](10000); // bounded to 10000 elements\nfunction normalizeNFD(str) {\n    return normalize(str, 'NFD', nfdCache);\n}\nvar nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str, form, normalizedCache) {\n    if (!canNormalize || !str) {\n        return str;\n    }\n    var cached = normalizedCache.get(str);\n    if (cached) {\n        return cached;\n    }\n    var res;\n    if (nonAsciiCharactersPattern.test(str)) {\n        res = str.normalize(form);\n    }\n    else {\n        res = str;\n    }\n    // Use the cache for fast lookup\n    normalizedCache.set(str, res);\n    return res;\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nfunction firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nfunction getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nfunction lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction compareIgnoreCase(a, b) {\n    var len = Math.min(a.length, b.length);\n    for (var i = 0; i < len; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (isUpperAsciiLetter(codeA)) {\n            codeA += 32;\n        }\n        if (isUpperAsciiLetter(codeB)) {\n            codeB += 32;\n        }\n        var diff = codeA - codeB;\n        if (diff === 0) {\n            // equal -> ignoreCase\n            continue;\n        }\n        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n        }\n        else {\n            return compare(a.toLowerCase(), b.toLowerCase());\n        }\n    }\n    if (a.length < b.length) {\n        return -1;\n    }\n    else if (a.length > b.length) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nfunction equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nfunction commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nfunction commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction substrEquals(a, aStart, aEnd, b, bStart, bEnd) {\n    while (aStart < aEnd && bStart < bEnd) {\n        if (a[aStart] !== b[bStart]) {\n            return false;\n        }\n        aStart += 1;\n        bStart += 1;\n    }\n    return true;\n}\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nfunction overlap(a, b) {\n    var aEnd = a.length;\n    var bEnd = b.length;\n    var aStart = aEnd - bEnd;\n    if (aStart === 0) {\n        return a === b ? aEnd : 0;\n    }\n    else if (aStart < 0) {\n        bEnd += aStart;\n        aStart = 0;\n    }\n    while (aStart < aEnd && bEnd > 0) {\n        if (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n            return bEnd;\n        }\n        bEnd -= 1;\n        aStart += 1;\n    }\n    return 0;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nfunction containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nfunction containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nfunction isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nfunction containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nfunction lcut(text, n) {\n    if (text.length < n) {\n        return text;\n    }\n    var re = /\\b/g;\n    var i = 0;\n    while (re.test(text)) {\n        if (text.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    return text.substring(i).replace(/^\\s/, empty);\n}\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nvar EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nvar COLOR_START = /\\x1b\\[\\d+m/g; // Color\nvar COLOR_END = /\\x1b\\[0?m/g; // Color\nfunction removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(EL, '');\n        str = str.replace(COLOR_START, '');\n        str = str.replace(COLOR_END, '');\n    }\n    return str;\n}\n// -- UTF-8 BOM\nvar UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nfunction startsWithUTF8BOM(str) {\n    return (str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nfunction stripUTF8BOM(str) {\n    return startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\nfunction safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nfunction fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false; // return early if target or query are undefined\n    }\n    if (target.length < query.length) {\n        return false; // impossible for query to be contained in target\n    }\n    var queryLen = query.length;\n    var targetLower = target.toLowerCase();\n    var index = 0;\n    var lastIndexOf = -1;\n    while (index < queryLen) {\n        var indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nfunction containsUppercaseCharacter(target, ignoreEscapedChars) {\n    if (ignoreEscapedChars === void 0) { ignoreEscapedChars = false; }\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export values */\n/* unused harmony export keys */\n/* unused harmony export getOrSet */\n/* unused harmony export StringIterator */\n/* unused harmony export PathIterator */\n/* unused harmony export TernarySearchTree */\n/* unused harmony export ResourceMap */\n/* unused harmony export Touch */\n/* unused harmony export LinkedMap */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LRUCache; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__uri_js__ = __webpack_require__(2);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nfunction values(forEachable) {\n    var result = [];\n    forEachable.forEach(function (value) { return result.push(value); });\n    return result;\n}\nfunction keys(map) {\n    var result = [];\n    map.forEach(function (value, key) { return result.push(key); });\n    return result;\n}\nfunction getOrSet(map, key, value) {\n    var result = map.get(key);\n    if (result === void 0) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nvar StringIterator = /** @class */ (function () {\n    function StringIterator() {\n        this._value = '';\n        this._pos = 0;\n    }\n    StringIterator.prototype.reset = function (key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    };\n    StringIterator.prototype.next = function () {\n        this._pos += 1;\n        return this;\n    };\n    StringIterator.prototype.join = function (parts) {\n        return parts.join('');\n    };\n    StringIterator.prototype.hasNext = function () {\n        return this._pos < this._value.length - 1;\n    };\n    StringIterator.prototype.cmp = function (a) {\n        var aCode = a.charCodeAt(0);\n        var thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    };\n    StringIterator.prototype.value = function () {\n        return this._value[this._pos];\n    };\n    return StringIterator;\n}());\n\nvar PathIterator = /** @class */ (function () {\n    function PathIterator() {\n    }\n    PathIterator.prototype.reset = function (key) {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    };\n    PathIterator.prototype.hasNext = function () {\n        return this._to < this._value.length;\n    };\n    PathIterator.prototype.join = function (parts) {\n        return parts.join('/');\n    };\n    PathIterator.prototype.next = function () {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        var justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            var ch = this._value.charCodeAt(this._to);\n            if (ch === PathIterator._fwd || ch === PathIterator._bwd) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    };\n    PathIterator.prototype.cmp = function (a) {\n        var aPos = 0;\n        var aLen = a.length;\n        var thisPos = this._from;\n        while (aPos < aLen && thisPos < this._to) {\n            var cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n            aPos += 1;\n            thisPos += 1;\n        }\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n        else if (aPos < aLen) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    };\n    PathIterator.prototype.value = function () {\n        return this._value.substring(this._from, this._to);\n    };\n    PathIterator._fwd = '/'.charCodeAt(0);\n    PathIterator._bwd = '\\\\'.charCodeAt(0);\n    return PathIterator;\n}());\n\nvar TernarySearchTreeNode = /** @class */ (function () {\n    function TernarySearchTreeNode() {\n    }\n    TernarySearchTreeNode.prototype.isEmpty = function () {\n        return !this.left && !this.mid && !this.right && !this.element;\n    };\n    return TernarySearchTreeNode;\n}());\nvar TernarySearchTree = /** @class */ (function () {\n    function TernarySearchTree(segments) {\n        this._iter = segments;\n    }\n    TernarySearchTree.forPaths = function () {\n        return new TernarySearchTree(new PathIterator());\n    };\n    TernarySearchTree.forStrings = function () {\n        return new TernarySearchTree(new StringIterator());\n    };\n    TernarySearchTree.prototype.clear = function () {\n        this._root = undefined;\n    };\n    TernarySearchTree.prototype.set = function (key, element) {\n        var iter = this._iter.reset(key);\n        var node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.str = iter.value();\n        }\n        node = this._root;\n        while (true) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.str = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.str = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.str = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        var oldElement = node.element;\n        node.element = element;\n        return oldElement;\n    };\n    TernarySearchTree.prototype.get = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.element : undefined;\n    };\n    TernarySearchTree.prototype.delete = function (key) {\n        var iter = this._iter.reset(key);\n        var stack = [];\n        var node = this._root;\n        // find and unset node\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.element = undefined;\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    var _a = stack.pop(), dir = _a[0], parent_1 = _a[1];\n                    switch (dir) {\n                        case 1:\n                            parent_1.left = undefined;\n                            break;\n                        case 0:\n                            parent_1.mid = undefined;\n                            break;\n                        case -1:\n                            parent_1.right = undefined;\n                            break;\n                    }\n                    node = parent_1;\n                }\n                break;\n            }\n        }\n    };\n    TernarySearchTree.prototype.findSubstr = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        var candidate;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.element || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.element || candidate;\n    };\n    TernarySearchTree.prototype.findSuperstr = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                var ret = new TernarySearchTree(this._iter);\n                ret._root = node.mid;\n                return ret;\n            }\n        }\n        return undefined;\n    };\n    TernarySearchTree.prototype.forEach = function (callback) {\n        this._forEach(this._root, [], callback);\n    };\n    TernarySearchTree.prototype._forEach = function (node, parts, callback) {\n        if (node) {\n            // left\n            this._forEach(node.left, parts, callback);\n            // node\n            parts.push(node.str);\n            if (node.element) {\n                callback(node.element, this._iter.join(parts));\n            }\n            // mid\n            this._forEach(node.mid, parts, callback);\n            parts.pop();\n            // right\n            this._forEach(node.right, parts, callback);\n        }\n    };\n    return TernarySearchTree;\n}());\n\nvar ResourceMap = /** @class */ (function () {\n    function ResourceMap() {\n        this.map = new Map();\n        this.ignoreCase = false; // in the future this should be an uri-comparator\n    }\n    ResourceMap.prototype.set = function (resource, value) {\n        this.map.set(this.toKey(resource), value);\n    };\n    ResourceMap.prototype.get = function (resource) {\n        return this.map.get(this.toKey(resource));\n    };\n    ResourceMap.prototype.has = function (resource) {\n        return this.map.has(this.toKey(resource));\n    };\n    Object.defineProperty(ResourceMap.prototype, \"size\", {\n        get: function () {\n            return this.map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResourceMap.prototype.clear = function () {\n        this.map.clear();\n    };\n    ResourceMap.prototype.delete = function (resource) {\n        return this.map.delete(this.toKey(resource));\n    };\n    ResourceMap.prototype.forEach = function (clb) {\n        this.map.forEach(clb);\n    };\n    ResourceMap.prototype.values = function () {\n        return values(this.map);\n    };\n    ResourceMap.prototype.toKey = function (resource) {\n        var key = resource.toString();\n        if (this.ignoreCase) {\n            key = key.toLowerCase();\n        }\n        return key;\n    };\n    ResourceMap.prototype.keys = function () {\n        return keys(this.map).map(__WEBPACK_IMPORTED_MODULE_0__uri_js__[\"a\" /* default */].parse);\n    };\n    return ResourceMap;\n}());\n\nvar Touch;\n(function (Touch) {\n    Touch[Touch[\"None\"] = 0] = \"None\";\n    Touch[Touch[\"AsOld\"] = 1] = \"AsOld\";\n    Touch[Touch[\"AsNew\"] = 2] = \"AsNew\";\n})(Touch || (Touch = {}));\nvar LinkedMap = /** @class */ (function () {\n    function LinkedMap() {\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n    }\n    LinkedMap.prototype.clear = function () {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n    };\n    LinkedMap.prototype.isEmpty = function () {\n        return !this._head && !this._tail;\n    };\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedMap.prototype.has = function (key) {\n        return this._map.has(key);\n    };\n    LinkedMap.prototype.get = function (key, touch) {\n        if (touch === void 0) { touch = Touch.None; }\n        var item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    };\n    LinkedMap.prototype.set = function (key, value, touch) {\n        if (touch === void 0) { touch = Touch.None; }\n        var item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key: key, value: value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.AsOld:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.AsNew:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n    };\n    LinkedMap.prototype.delete = function (key) {\n        return !!this.remove(key);\n    };\n    LinkedMap.prototype.remove = function (key) {\n        var item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    };\n    LinkedMap.prototype.shift = function () {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        var item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    };\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\n        var current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            current = current.next;\n        }\n    };\n    LinkedMap.prototype.values = function () {\n        var result = [];\n        var current = this._head;\n        while (current) {\n            result.push(current.value);\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedMap.prototype.keys = function () {\n        var result = [];\n        var current = this._head;\n        while (current) {\n            result.push(current.key);\n            current = current.next;\n        }\n        return result;\n    };\n    /* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n    public keys(): IterableIterator<K> {\n        let current = this._head;\n        let iterator: IterableIterator<K> = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next():IteratorResult<K> {\n                if (current) {\n                    let result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                } else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n\n    public values(): IterableIterator<V> {\n        let current = this._head;\n        let iterator: IterableIterator<V> = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next():IteratorResult<V> {\n                if (current) {\n                    let result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                } else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    */\n    LinkedMap.prototype.trimOld = function (newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        var current = this._head;\n        var currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        current.previous = void 0;\n    };\n    LinkedMap.prototype.addItemFirst = function (item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n    };\n    LinkedMap.prototype.addItemLast = function (item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n    };\n    LinkedMap.prototype.removeItem = function (item) {\n        if (item === this._head && item === this._tail) {\n            this._head = void 0;\n            this._tail = void 0;\n        }\n        else if (item === this._head) {\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            this._tail = item.previous;\n        }\n        else {\n            var next = item.next;\n            var previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n    };\n    LinkedMap.prototype.touch = function (item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n            return;\n        }\n        if (touch === Touch.AsOld) {\n            if (item === this._head) {\n                return;\n            }\n            var next = item.next;\n            var previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = void 0;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = void 0;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n        }\n        else if (touch === Touch.AsNew) {\n            if (item === this._tail) {\n                return;\n            }\n            var next = item.next;\n            var previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = void 0;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = void 0;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n        }\n    };\n    LinkedMap.prototype.toJSON = function () {\n        var data = [];\n        this.forEach(function (value, key) {\n            data.push([key, value]);\n        });\n        return data;\n    };\n    LinkedMap.prototype.fromJSON = function (data) {\n        this.clear();\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var _a = data_1[_i], key = _a[0], value = _a[1];\n            this.set(key, value);\n        }\n    };\n    return LinkedMap;\n}());\n\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    function LRUCache(limit, ratio) {\n        if (ratio === void 0) { ratio = 1; }\n        var _this = _super.call(this) || this;\n        _this._limit = limit;\n        _this._ratio = Math.min(Math.max(0, ratio), 1);\n        return _this;\n    }\n    Object.defineProperty(LRUCache.prototype, \"limit\", {\n        get: function () {\n            return this._limit;\n        },\n        set: function (limit) {\n            this._limit = limit;\n            this.checkTrim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LRUCache.prototype, \"ratio\", {\n        get: function () {\n            return this._ratio;\n        },\n        set: function (ratio) {\n            this._ratio = Math.min(Math.max(0, ratio), 1);\n            this.checkTrim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.get = function (key) {\n        return _super.prototype.get.call(this, key, Touch.AsNew);\n    };\n    LRUCache.prototype.peek = function (key) {\n        return _super.prototype.get.call(this, key, Touch.None);\n    };\n    LRUCache.prototype.set = function (key, value) {\n        _super.prototype.set.call(this, key, value, Touch.AsNew);\n        this.checkTrim();\n    };\n    LRUCache.prototype.checkTrim = function () {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    };\n    return LRUCache;\n}(LinkedMap));\n\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MirrorTextModel; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__viewModel_prefixSumComputer_js__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_position_js__ = __webpack_require__(1);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    Object.defineProperty(MirrorTextModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var i = 0, len = changes.length; i < len; i++) {\n            var change = changes[i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new __WEBPACK_IMPORTED_MODULE_1__core_position_js__[\"a\" /* Position */](change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new __WEBPACK_IMPORTED_MODULE_0__viewModel_prefixSumComputer_js__[\"a\" /* PrefixSumComputer */](lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\n\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export PrefixSumIndexOfResult */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PrefixSumComputer; });\n/* unused harmony export PrefixSumComputerWithCache */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_uint_js__ = __webpack_require__(5);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\n\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = Object(__WEBPACK_IMPORTED_MODULE_0__core_uint_js__[\"b\" /* toUint32 */])(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = Object(__WEBPACK_IMPORTED_MODULE_0__core_uint_js__[\"b\" /* toUint32 */])(index);\n        value = Object(__WEBPACK_IMPORTED_MODULE_0__core_uint_js__[\"b\" /* toUint32 */])(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = Object(__WEBPACK_IMPORTED_MODULE_0__core_uint_js__[\"b\" /* toUint32 */])(startIndex);\n        cnt = Object(__WEBPACK_IMPORTED_MODULE_0__core_uint_js__[\"b\" /* toUint32 */])(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = Object(__WEBPACK_IMPORTED_MODULE_0__core_uint_js__[\"b\" /* toUint32 */])(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid;\n        var midStop;\n        var midStart;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\n\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\n\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = computeLinks;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_characterClassifier_js__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_uint_js__ = __webpack_require__(5);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new __WEBPACK_IMPORTED_MODULE_1__core_uint_js__[\"a\" /* Uint8Matrix */](maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new __WEBPACK_IMPORTED_MODULE_0__core_characterClassifier_js__[\"a\" /* CharacterClassifier */](0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model) {\n        var stateMachine = getStateMachine();\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = classifier.get(chCode);\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nfunction computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CharacterClassifier; });\n/* unused harmony export CharacterSet */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__uint_js__ = __webpack_require__(5);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = Object(__WEBPACK_IMPORTED_MODULE_0__uint_js__[\"c\" /* toUint8 */])(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = Object(__WEBPACK_IMPORTED_MODULE_0__uint_js__[\"c\" /* toUint8 */])(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\n\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\n\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BasicInplaceReplace; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\n\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export USUAL_WORD_SEPARATORS */\n/* unused harmony export DEFAULT_WORD_REGEXP */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ensureValidWordDefinition;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getWordAtText;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var i = 0; i < USUAL_WORD_SEPARATORS.length; i++) {\n        if (allowInWords.indexOf(USUAL_WORD_SEPARATORS[i]) >= 0) {\n            continue;\n        }\n        source += '\\\\' + USUAL_WORD_SEPARATORS[i];\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nvar DEFAULT_WORD_REGEXP = createWordRegExp();\nfunction ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    var end = text.indexOf(' ', pos);\n    if (end === -1) {\n        end = text.length;\n    }\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Severity */\n/* unused harmony export MarkerSeverity */\n/* unused harmony export KeyMod */\n/* unused harmony export KeyCode */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createMonacoBaseAPI;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_common_event_js__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base_common_keyCodes_js__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_position_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_range_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_selection_js__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__base_common_winjs_base_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__base_common_cancellation_js__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__core_token_js__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__base_common_uri_js__ = __webpack_require__(2);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\nvar MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return Object(__WEBPACK_IMPORTED_MODULE_1__base_common_keyCodes_js__[\"a\" /* KeyChord */])(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\n\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nvar KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nfunction createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: __WEBPACK_IMPORTED_MODULE_6__base_common_cancellation_js__[\"a\" /* CancellationTokenSource */],\n        Emitter: __WEBPACK_IMPORTED_MODULE_0__base_common_event_js__[\"a\" /* Emitter */],\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: __WEBPACK_IMPORTED_MODULE_2__core_position_js__[\"a\" /* Position */],\n        Range: __WEBPACK_IMPORTED_MODULE_3__core_range_js__[\"a\" /* Range */],\n        Selection: __WEBPACK_IMPORTED_MODULE_4__core_selection_js__[\"a\" /* Selection */],\n        SelectionDirection: __WEBPACK_IMPORTED_MODULE_4__core_selection_js__[\"b\" /* SelectionDirection */],\n        Severity: Severity,\n        MarkerSeverity: MarkerSeverity,\n        Promise: __WEBPACK_IMPORTED_MODULE_5__base_common_winjs_base_js__[\"b\" /* TPromise */],\n        Uri: __WEBPACK_IMPORTED_MODULE_8__base_common_uri_js__[\"a\" /* default */],\n        Token: __WEBPACK_IMPORTED_MODULE_7__core_token_js__[\"a\" /* Token */]\n    };\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LinkedList; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n    }\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.clear = function () {\n        this._first = undefined;\n        this._last = undefined;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this.insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this.insert(element, true);\n    };\n    LinkedList.prototype.insert = function (element, atTheEnd) {\n        var _this = this;\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        return function () {\n            for (var candidate = _this._first; candidate instanceof Node; candidate = candidate.next) {\n                if (candidate !== newNode) {\n                    continue;\n                }\n                if (candidate.prev && candidate.next) {\n                    // middle\n                    var anchor = candidate.prev;\n                    anchor.next = candidate.next;\n                    candidate.next.prev = anchor;\n                }\n                else if (!candidate.prev && !candidate.next) {\n                    // only node\n                    _this._first = undefined;\n                    _this._last = undefined;\n                }\n                else if (!candidate.next) {\n                    // last\n                    _this._last = _this._last.prev;\n                    _this._last.next = undefined;\n                }\n                else if (!candidate.prev) {\n                    // first\n                    _this._first = _this._first.next;\n                    _this._first.prev = undefined;\n                }\n                // done\n                break;\n            }\n        };\n    };\n    LinkedList.prototype.iterator = function () {\n        var element = {\n            done: undefined,\n            value: undefined,\n        };\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    element.done = true;\n                    element.value = undefined;\n                }\n                else {\n                    element.done = false;\n                    element.value = node.element;\n                    node = node.next;\n                }\n                return element;\n            }\n        };\n    };\n    LinkedList.prototype.toArray = function () {\n        var result = [];\n        for (var node = this._first; node instanceof Node; node = node.next) {\n            result.push(node.element);\n        }\n        return result;\n    };\n    return LinkedList;\n}());\n\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export KeyCodeUtils */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = KeyChord;\n/* unused harmony export createKeybinding */\n/* unused harmony export createSimpleKeybinding */\n/* unused harmony export SimpleKeybinding */\n/* unused harmony export ChordKeybinding */\n/* unused harmony export ResolvedKeybindingPart */\n/* unused harmony export ResolvedKeybinding */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nvar KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nfunction KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000ffff) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nfunction createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000ffff) >>> 0;\n    var chordPart = (keybinding & 0xffff0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding(createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS));\n    }\n    return createSimpleKeybinding(firstPart, OS);\n}\nfunction createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.type = 1 /* Simple */;\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        if (other.type !== 1 /* Simple */) {\n            return false;\n        }\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.getHashCode = function () {\n        var ctrl = this.ctrlKey ? '1' : '0';\n        var shift = this.shiftKey ? '1' : '0';\n        var alt = this.altKey ? '1' : '0';\n        var meta = this.metaKey ? '1' : '0';\n        return \"\" + ctrl + shift + alt + meta + this.keyCode;\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\n\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(firstPart, chordPart) {\n        this.type = 2 /* Chord */;\n        this.firstPart = firstPart;\n        this.chordPart = chordPart;\n    }\n    ChordKeybinding.prototype.getHashCode = function () {\n        return this.firstPart.getHashCode() + \";\" + this.chordPart.getHashCode();\n    };\n    return ChordKeybinding;\n}());\n\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\n\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return SelectionDirection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Selection; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__range_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__position_js__ = __webpack_require__(1);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n/**\n * The direction of a selection.\n */\nvar SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return SelectionDirection.LTR;\n        }\n        return SelectionDirection.RTL;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new __WEBPACK_IMPORTED_MODULE_1__position_js__[\"a\" /* Position */](this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(__WEBPACK_IMPORTED_MODULE_0__range_js__[\"a\" /* Range */]));\n\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Token; });\n/* unused harmony export TokenizationResult */\n/* unused harmony export TokenizationResult2 */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\n\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\n\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\n\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nfunction webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 31;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export logOnceWebWorkerWarning */\n/* unused harmony export SimpleWorkerClient */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SimpleWorkerServer; });\n/* unused harmony export create */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__errors_js__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lifecycle_js__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__async_js__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__platform_js__ = __webpack_require__(3);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nfunction logOnceWebWorkerWarning(err) {\n    if (!__WEBPACK_IMPORTED_MODULE_4__platform_js__[\"b\" /* isWeb */]) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var req = String(++this._lastSentReq);\n        var reply = {\n            c: null,\n            e: null\n        };\n        var result = new __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n            reply.c = c;\n            reply.e = e;\n        }, function () {\n            // Cancel not supported\n        });\n        this._pendingReplies[req] = reply;\n        this._send({\n            vsWorker: this._workerId,\n            req: req,\n            method: method,\n            args: args\n        });\n        return result;\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.e(err);\n                return;\n            }\n            reply.c(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = Object(__WEBPACK_IMPORTED_MODULE_0__errors_js__[\"d\" /* transformErrorForSerialization */])(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: Object(__WEBPACK_IMPORTED_MODULE_0__errors_js__[\"d\" /* transformErrorForSerialization */])(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyFulfill = null;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            lazyProxyReject(err);\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */].as(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        _this._lazyProxy = new __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n            lazyProxyFulfill = c;\n            lazyProxyReject = e;\n        }, function () { });\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._onModuleLoaded.then(function (availableMethods) {\n            var proxy = {};\n            for (var i = 0; i < availableMethods.length; i++) {\n                proxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\n            }\n            lazyProxyFulfill(proxy);\n        }, function (e) {\n            lazyProxyReject(e);\n            _this._onError('Worker failed to load ' + moduleId, e);\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        // Do not allow chaining promises to cancel the proxy creation\n        return new __WEBPACK_IMPORTED_MODULE_3__async_js__[\"a\" /* ShallowCancelThenPromise */](this._lazyProxy);\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(c, e);\n            }, e);\n        }, function () {\n            // Cancel intentionally not supported\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(__WEBPACK_IMPORTED_MODULE_1__lifecycle_js__[\"a\" /* Disposable */]));\n\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */].wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */].as(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */].wrapError(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var prop in this._requestHandler) {\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */].as(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        var cc;\n        var ee;\n        var r = new __WEBPACK_IMPORTED_MODULE_2__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n            cc = c;\n            ee = e;\n        });\n        // Use the global require to be sure to get the global config\n        self.require([moduleId], function () {\n            var result = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                result[_i] = arguments[_i];\n            }\n            var handlerModule = result[0];\n            _this._requestHandler = handlerModule.create();\n            var methods = [];\n            for (var prop in _this._requestHandler) {\n                if (typeof _this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            cc(methods);\n        }, ee);\n        return r;\n    };\n    return SimpleWorkerServer;\n}());\n\n/**\n * Called on the worker side\n */\nfunction create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export isPromiseLike */\n/* unused harmony export toPromiseLike */\n/* unused harmony export asWinJsPromise */\n/* unused harmony export wireCancellationToken */\n/* unused harmony export Throttler */\n/* unused harmony export SimpleThrottler */\n/* unused harmony export Delayer */\n/* unused harmony export ThrottledDelayer */\n/* unused harmony export Barrier */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ShallowCancelThenPromise; });\n/* unused harmony export timeout */\n/* unused harmony export always */\n/* unused harmony export sequence */\n/* unused harmony export first */\n/* unused harmony export Limiter */\n/* unused harmony export Queue */\n/* unused harmony export ResourceQueue */\n/* unused harmony export setDisposableTimeout */\n/* unused harmony export TimeoutTimer */\n/* unused harmony export IntervalTimer */\n/* unused harmony export RunOnceScheduler */\n/* unused harmony export nfcall */\n/* unused harmony export ninvoke */\n/* unused harmony export ThrottledEmitter */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__errors_js__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cancellation_js__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lifecycle_js__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__event_js__ = __webpack_require__(6);\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nfunction isPromiseLike(obj) {\n    return obj && typeof obj.then === 'function';\n}\nfunction toPromiseLike(arg) {\n    if (isPromiseLike(arg)) {\n        return arg;\n    }\n    else {\n        return __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */].as(arg);\n    }\n}\nfunction asWinJsPromise(callback) {\n    var source = new __WEBPACK_IMPORTED_MODULE_2__cancellation_js__[\"a\" /* CancellationTokenSource */]();\n    return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (resolve, reject, progress) {\n        var item = callback(source.token);\n        if (item instanceof __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */]) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            }, progress);\n        }\n        else if (isPromiseLike(item)) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            });\n        }\n        else {\n            source.dispose();\n            resolve(item);\n        }\n    }, function () {\n        source.cancel();\n    });\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise, resolveAsUndefinedWhenCancelled) {\n    var subscription = token.onCancellationRequested(function () { return promise.cancel(); });\n    if (resolveAsUndefinedWhenCancelled) {\n        promise = promise.then(undefined, function (err) {\n            if (!__WEBPACK_IMPORTED_MODULE_0__errors_js__[\"b\" /* isPromiseCanceledError */](err)) {\n                return __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */].wrapError(err);\n            }\n            return undefined;\n        });\n    }\n    return always(promise, function () { return subscription.dispose(); });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nvar Throttler = /** @class */ (function () {\n    function Throttler() {\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    Throttler.prototype.queue = function (promiseFactory) {\n        var _this = this;\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                var onComplete_1 = function () {\n                    _this.queuedPromise = null;\n                    var result = _this.queue(_this.queuedPromiseFactory);\n                    _this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n                    _this.activePromise.then(onComplete_1, onComplete_1, p).done(c);\n                }, function () {\n                    _this.activePromise.cancel();\n                });\n            }\n            return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n                _this.queuedPromise.then(c, e, p);\n            }, function () {\n                // no-op\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n            _this.activePromise.done(function (result) {\n                _this.activePromise = null;\n                c(result);\n            }, function (err) {\n                _this.activePromise = null;\n                e(err);\n            }, p);\n        }, function () {\n            _this.activePromise.cancel();\n        });\n    };\n    return Throttler;\n}());\n\n// TODO@Joao: can the previous throttler be replaced with this?\nvar SimpleThrottler = /** @class */ (function () {\n    function SimpleThrottler() {\n        this.current = __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */].wrap(null);\n    }\n    SimpleThrottler.prototype.queue = function (promiseTask) {\n        return this.current = this.current.then(function () { return promiseTask(); });\n    };\n    return SimpleThrottler;\n}());\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so the he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nvar Delayer = /** @class */ (function () {\n    function Delayer(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = null;\n        this.completionPromise = null;\n        this.onSuccess = null;\n        this.task = null;\n    }\n    Delayer.prototype.trigger = function (task, delay) {\n        var _this = this;\n        if (delay === void 0) { delay = this.defaultDelay; }\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c) {\n                _this.onSuccess = c;\n            }, function () {\n                // no-op\n            }).then(function () {\n                _this.completionPromise = null;\n                _this.onSuccess = null;\n                var task = _this.task;\n                _this.task = null;\n                return task();\n            });\n        }\n        this.timeout = setTimeout(function () {\n            _this.timeout = null;\n            _this.onSuccess(null);\n        }, delay);\n        return this.completionPromise;\n    };\n    Delayer.prototype.isTriggered = function () {\n        return this.timeout !== null;\n    };\n    Delayer.prototype.cancel = function () {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.completionPromise.cancel();\n            this.completionPromise = null;\n        }\n    };\n    Delayer.prototype.cancelTimeout = function () {\n        if (this.timeout !== null) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    };\n    return Delayer;\n}());\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * Simply combine the two mail man strategies from the Throttler and Delayer\n * helpers, for an analogy.\n */\nvar ThrottledDelayer = /** @class */ (function (_super) {\n    __extends(ThrottledDelayer, _super);\n    function ThrottledDelayer(defaultDelay) {\n        var _this = _super.call(this, defaultDelay) || this;\n        _this.throttler = new Throttler();\n        return _this;\n    }\n    ThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\n        var _this = this;\n        return _super.prototype.trigger.call(this, function () { return _this.throttler.queue(promiseFactory); }, delay);\n    };\n    return ThrottledDelayer;\n}(Delayer));\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nvar Barrier = /** @class */ (function () {\n    function Barrier() {\n        var _this = this;\n        this._isOpen = false;\n        this._promise = new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n            _this._completePromise = c;\n        }, function () {\n            console.warn('You should really not try to cancel this ready promise!');\n        });\n    }\n    Barrier.prototype.isOpen = function () {\n        return this._isOpen;\n    };\n    Barrier.prototype.open = function () {\n        this._isOpen = true;\n        this._completePromise(true);\n    };\n    Barrier.prototype.wait = function () {\n        return this._promise;\n    };\n    return Barrier;\n}());\n\nvar ShallowCancelThenPromise = /** @class */ (function (_super) {\n    __extends(ShallowCancelThenPromise, _super);\n    function ShallowCancelThenPromise(outer) {\n        var _this = this;\n        var completeCallback, errorCallback, progressCallback;\n        _this = _super.call(this, function (c, e, p) {\n            completeCallback = c;\n            errorCallback = e;\n            progressCallback = p;\n        }, function () {\n            // cancel this promise but not the\n            // outer promise\n            errorCallback(__WEBPACK_IMPORTED_MODULE_0__errors_js__[\"a\" /* canceled */]());\n        }) || this;\n        outer.then(completeCallback, errorCallback, progressCallback);\n        return _this;\n    }\n    return ShallowCancelThenPromise;\n}(__WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */]));\n\n/**\n * Replacement for `WinJS.Promise.timeout`.\n */\nfunction timeout(n) {\n    return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"a\" /* Promise */](function (resolve) { return setTimeout(resolve, n); });\n}\nfunction isWinJSPromise(candidate) {\n    return __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */].is(candidate) && typeof candidate.done === 'function';\n}\nfunction always(winjsPromiseOrPromiseLike, f) {\n    if (isWinJSPromise(winjsPromiseOrPromiseLike)) {\n        return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n            winjsPromiseOrPromiseLike.done(function (result) {\n                try {\n                    f(result);\n                }\n                catch (e1) {\n                    __WEBPACK_IMPORTED_MODULE_0__errors_js__[\"c\" /* onUnexpectedError */](e1);\n                }\n                c(result);\n            }, function (err) {\n                try {\n                    f(err);\n                }\n                catch (e1) {\n                    __WEBPACK_IMPORTED_MODULE_0__errors_js__[\"c\" /* onUnexpectedError */](e1);\n                }\n                e(err);\n            }, function (progress) {\n                p(progress);\n            });\n        }, function () {\n            winjsPromiseOrPromiseLike.cancel();\n        });\n    }\n    else {\n        // simple\n        winjsPromiseOrPromiseLike.then(function (_) { return f(); }, function (_) { return f(); });\n        return winjsPromiseOrPromiseLike;\n    }\n}\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\nfunction sequence(promiseFactories) {\n    var results = [];\n    // reverse since we start with last element using pop()\n    promiseFactories = promiseFactories.reverse();\n    function next() {\n        if (promiseFactories.length) {\n            return promiseFactories.pop()();\n        }\n        return null;\n    }\n    function thenHandler(result) {\n        if (result !== undefined && result !== null) {\n            results.push(result);\n        }\n        var n = next();\n        if (n) {\n            return n.then(thenHandler);\n        }\n        return __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */].as(results);\n    }\n    return __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */].as(null).then(thenHandler);\n}\nfunction first(promiseFactories, shouldStop) {\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\n    promiseFactories = promiseFactories.reverse().slice();\n    var loop = function () {\n        if (promiseFactories.length === 0) {\n            return __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */].as(null);\n        }\n        var factory = promiseFactories.pop();\n        var promise = factory();\n        return promise.then(function (result) {\n            if (shouldStop(result)) {\n                return __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */].as(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nvar Limiter = /** @class */ (function () {\n    function Limiter(maxDegreeOfParalellism) {\n        this.maxDegreeOfParalellism = maxDegreeOfParalellism;\n        this.outstandingPromises = [];\n        this.runningPromises = 0;\n        this._onFinished = new __WEBPACK_IMPORTED_MODULE_4__event_js__[\"a\" /* Emitter */]();\n    }\n    Object.defineProperty(Limiter.prototype, \"onFinished\", {\n        get: function () {\n            return this._onFinished.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Limiter.prototype, \"size\", {\n        get: function () {\n            return this.runningPromises + this.outstandingPromises.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Limiter.prototype.queue = function (promiseFactory) {\n        var _this = this;\n        return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c, e, p) {\n            _this.outstandingPromises.push({\n                factory: promiseFactory,\n                c: c,\n                e: e,\n                p: p\n            });\n            _this.consume();\n        });\n    };\n    Limiter.prototype.consume = function () {\n        var _this = this;\n        while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n            var iLimitedTask = this.outstandingPromises.shift();\n            this.runningPromises++;\n            var promise = iLimitedTask.factory();\n            promise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\n            promise.done(function () { return _this.consumed(); }, function () { return _this.consumed(); });\n        }\n    };\n    Limiter.prototype.consumed = function () {\n        this.runningPromises--;\n        if (this.outstandingPromises.length > 0) {\n            this.consume();\n        }\n        else {\n            this._onFinished.fire();\n        }\n    };\n    Limiter.prototype.dispose = function () {\n        this._onFinished.dispose();\n    };\n    return Limiter;\n}());\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nvar Queue = /** @class */ (function (_super) {\n    __extends(Queue, _super);\n    function Queue() {\n        return _super.call(this, 1) || this;\n    }\n    return Queue;\n}(Limiter));\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nvar ResourceQueue = /** @class */ (function () {\n    function ResourceQueue() {\n        this.queues = Object.create(null);\n    }\n    ResourceQueue.prototype.queueFor = function (resource) {\n        var _this = this;\n        var key = resource.toString();\n        if (!this.queues[key]) {\n            var queue_1 = new Queue();\n            queue_1.onFinished(function () {\n                queue_1.dispose();\n                delete _this.queues[key];\n            });\n            this.queues[key] = queue_1;\n        }\n        return this.queues[key];\n    };\n    return ResourceQueue;\n}());\n\nfunction setDisposableTimeout(handler, timeout) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    var handle = setTimeout.apply(void 0, [handler, timeout].concat(args));\n    return { dispose: function () { clearTimeout(handle); } };\n}\nvar TimeoutTimer = /** @class */ (function (_super) {\n    __extends(TimeoutTimer, _super);\n    function TimeoutTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    TimeoutTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    TimeoutTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    };\n    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\n        var _this = this;\n        this.cancel();\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\n        var _this = this;\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    return TimeoutTimer;\n}(__WEBPACK_IMPORTED_MODULE_3__lifecycle_js__[\"a\" /* Disposable */]));\n\nvar IntervalTimer = /** @class */ (function (_super) {\n    __extends(IntervalTimer, _super);\n    function IntervalTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    IntervalTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    IntervalTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearInterval(this._token);\n            this._token = -1;\n        }\n    };\n    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\n        this.cancel();\n        this._token = setInterval(function () {\n            runner();\n        }, interval);\n    };\n    return IntervalTimer;\n}(__WEBPACK_IMPORTED_MODULE_3__lifecycle_js__[\"a\" /* Disposable */]));\n\nvar RunOnceScheduler = /** @class */ (function () {\n    function RunOnceScheduler(runner, timeout) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = timeout;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    RunOnceScheduler.prototype.dispose = function () {\n        this.cancel();\n        this.runner = null;\n    };\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    RunOnceScheduler.prototype.cancel = function () {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    };\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    RunOnceScheduler.prototype.schedule = function (delay) {\n        if (delay === void 0) { delay = this.timeout; }\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    };\n    /**\n     * Returns true if scheduled.\n     */\n    RunOnceScheduler.prototype.isScheduled = function () {\n        return this.timeoutToken !== -1;\n    };\n    RunOnceScheduler.prototype.onTimeout = function () {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.runner();\n        }\n    };\n    return RunOnceScheduler;\n}());\n\nfunction nfcall(fn) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c, e) { return fn.apply(void 0, args.concat([function (err, result) { return err ? e(err) : c(result); }])); }, function () { return null; });\n}\nfunction ninvoke(thisArg, fn) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return new __WEBPACK_IMPORTED_MODULE_1__winjs_base_js__[\"b\" /* TPromise */](function (c, e) { return fn.call.apply(fn, [thisArg].concat(args, [function (err, result) { return err ? e(err) : c(result); }])); }, function () { return null; });\n}\n/**\n * An emitter that will ignore any events that occur during a specific code\n * execution triggered via throttle() until the promise has finished (either\n * successfully or with an error). Only after the promise has finished, the\n * last event that was fired during the operation will get emitted.\n *\n */\nvar ThrottledEmitter = /** @class */ (function (_super) {\n    __extends(ThrottledEmitter, _super);\n    function ThrottledEmitter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ThrottledEmitter.prototype.throttle = function (promise) {\n        var _this = this;\n        this.suspended = true;\n        return always(promise, function () { return _this.resume(); });\n    };\n    ThrottledEmitter.prototype.fire = function (event) {\n        if (this.suspended) {\n            this.lastEvent = event;\n            this.hasLastEvent = true;\n            return;\n        }\n        return _super.prototype.fire.call(this, event);\n    };\n    ThrottledEmitter.prototype.resume = function () {\n        this.suspended = false;\n        if (this.hasLastEvent) {\n            this.fire(this.lastEvent);\n        }\n        this.hasLastEvent = false;\n        this.lastEvent = void 0;\n    };\n    return ThrottledEmitter;\n}(__WEBPACK_IMPORTED_MODULE_4__event_js__[\"a\" /* Emitter */]));\n\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// editor.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/d3-show-and-tell/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fa9a41755ce36c2149b9","/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\nvar __winjs_exports;\n\n(function() {\n\nvar _modules = Object.create(null);//{};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    var actualSetImmediate = null;\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: function (callback) {\n            // BEGIN monaco change\n            if (actualSetImmediate === null) {\n                if (_Global.setImmediate) {\n                    actualSetImmediate = _Global.setImmediate.bind(_Global);\n                } else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n                    actualSetImmediate = process.nextTick.bind(process);\n                } else {\n                    actualSetImmediate = _Global.setTimeout.bind(_Global);\n                }\n            }\n            actualSetImmediate(callback);\n            // END monaco change\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\n__winjs_exports = _modules[\"WinJS/Core/_WinJS\"];\n__winjs_exports.TPromise = __winjs_exports.Promise;\n__winjs_exports.PPromise = __winjs_exports.Promise;\n\n// ESM-comment-begin\n// if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n//     define([], __winjs_exports);\n// } else {\n//     module.exports = __winjs_exports;\n// }\n// ESM-comment-end\n\n})();\n\n// ESM-uncomment-begin\nexport var Promise = __winjs_exports.Promise;\nexport var TPromise = __winjs_exports.TPromise;\nexport var PPromise = __winjs_exports.PPromise;\n// ESM-uncomment-end\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/winjs.base.js\n// module id = 0\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/core/position.js\n// module id = 1\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as platform from './platform.js';\nfunction _encode(ch) {\n    return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n}\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponent2(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n}\nfunction encodeNoop(str) {\n    return str.replace(/[#?]/, _encode);\n}\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret) {\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nvar _driveLetterPath = /^\\/[a-zA-Z]:/;\nvar _upperCaseDrive = /^(\\/)?([A-Z]:)/;\nvar _driveLetter = /^[a-zA-Z]:/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = path || _empty;\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n         * uses the platform specific path separator. Will *not* validate the path for\n         * invalid characters and semantics. Will *not* look at the scheme of this URI.\n         */\n        get: function () {\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === void 0) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === void 0) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === void 0) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === void 0) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === void 0) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    URI.parse = function (value) {\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty));\n    };\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (platform.isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        // Ensure that path starts with a slash\n        // or that it is at least a slash\n        if (_driveLetter.test(path)) {\n            path = _slash + path;\n        }\n        else if (path[0] !== _slash) {\n            // tricky -> makes invalid paths\n            // but otherwise we have to stop\n            // allowing relative paths...\n            path = _slash + path;\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1,\n            fsPath: this.fsPath,\n            external: this.toString(),\n        };\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport default URI;\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    return _URI;\n}(URI));\n/**\n * Compute `fsPath` for the given uri\n * @param uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (_driveLetterPath.test(uri.path)) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (platform.isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponent2\n        : encodeNoop;\n    var parts = [];\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        parts.push(scheme, ':');\n    }\n    if (authority || scheme === 'file') {\n        parts.push('//');\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                parts.push(encoder(userinfo));\n            }\n            else {\n                parts.push(encoder(userinfo.substr(0, idx)), ':', encoder(userinfo.substr(idx + 1)));\n            }\n            parts.push('@');\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            parts.push(encoder(authority));\n        }\n        else {\n            parts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        var m = _upperCaseDrive.exec(path);\n        if (m) {\n            if (m[1]) {\n                path = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n            }\n            else {\n                path = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n            }\n        }\n        // encode every segement but not slashes\n        // make sure that # and ? are always encoded\n        // when occurring in paths - otherwise the result\n        // cannot be parsed back again\n        var lastIdx = 0;\n        while (true) {\n            var idx = path.indexOf(_slash, lastIdx);\n            if (idx === -1) {\n                parts.push(encoder(path.substring(lastIdx)));\n                break;\n            }\n            parts.push(encoder(path.substring(lastIdx, idx)), _slash);\n            lastIdx = idx + 1;\n        }\n    }\n    if (query) {\n        parts.push('?', encoder(query));\n    }\n    if (fragment) {\n        parts.push('#', encoder(fragment));\n    }\n    return parts.join(_empty);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/uri.js\n// module id = 2\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = undefined;\nvar _translationsConfigFile = undefined;\nexport var LANGUAGE_DEFAULT = 'en';\n// OS detection\nif (typeof process === 'object' && typeof process.nextTick === 'function' && typeof process.platform === 'string') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nexport var Platform;\n(function (Platform) {\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n})(Platform || (Platform = {}));\nvar _platform = Platform.Web;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = Platform.Mac;\n    }\n    else if (_isWindows) {\n        _platform = Platform.Windows;\n    }\n    else if (_isLinux) {\n        _platform = Platform.Linux;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nexport var platform = _platform;\nexport function isRootUser() {\n    return _isNative && !_isWindows && (process.getuid() === 0);\n}\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport var language = _language;\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport var locale = _locale;\n/**\n * The translatios that are available through language packs.\n */\nexport var translationsConfigFile = _translationsConfigFile;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/platform.js\n// module id = 3\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Range` from an `IRange`.\n     */\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        var aStartLineNumber = a.startLineNumber | 0;\n        var bStartLineNumber = b.startLineNumber | 0;\n        if (aStartLineNumber === bStartLineNumber) {\n            var aStartColumn = a.startColumn | 0;\n            var bStartColumn = b.startColumn | 0;\n            if (aStartColumn === bStartColumn) {\n                var aEndLineNumber = a.endLineNumber | 0;\n                var bEndLineNumber = b.endLineNumber | 0;\n                if (aEndLineNumber === bEndLineNumber) {\n                    var aEndColumn = a.endColumn | 0;\n                    var bEndColumn = b.endColumn | 0;\n                    return aEndColumn - bEndColumn;\n                }\n                return aEndLineNumber - bEndLineNumber;\n            }\n            return aStartColumn - bStartColumn;\n        }\n        return aStartLineNumber - bStartLineNumber;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/core/range.js\n// module id = 4\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js\n// module id = 5\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toDisposable, combinedDisposable, empty as EmptyDisposable } from './lifecycle.js';\nimport { TPromise } from './winjs.base.js';\nimport { once as onceFn } from './functional.js';\nimport { onUnexpectedError } from './errors.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n})(Event || (Event = {}));\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(_options) {\n        this._options = _options;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove && _this._listeners.isEmpty()) {\n                                    _this._options.onLastListenerRemove(_this);\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        e.listener.dispose();\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\nexport function fromCallback(fn) {\n    var listener;\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () { return listener = fn(function (e) { return emitter.fire(e); }); },\n        onLastListenerRemove: function () { return listener.dispose(); }\n    });\n    return emitter.event;\n}\nexport function fromPromise(promise) {\n    var emitter = new Emitter();\n    var shouldEmit = false;\n    promise\n        .then(null, function () { return null; })\n        .then(function () {\n        if (!shouldEmit) {\n            setTimeout(function () { return emitter.fire(); }, 0);\n        }\n        else {\n            emitter.fire();\n        }\n    });\n    shouldEmit = true;\n    return emitter.event;\n}\nexport function toPromise(event) {\n    return new TPromise(function (complete) {\n        var sub = event(function (e) {\n            sub.dispose();\n            complete(e);\n        });\n    });\n}\nexport function once(event) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        var result = event(function (e) {\n            result.dispose();\n            return listener.call(thisArgs, e);\n        }, null, disposables);\n        return result;\n    };\n}\nexport function anyEvent() {\n    var events = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        events[_i] = arguments[_i];\n    }\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n    };\n}\nexport function debounceEvent(event, merger, delay, leading) {\n    if (delay === void 0) { delay = 100; }\n    if (leading === void 0) { leading = false; }\n    var subscription;\n    var output = undefined;\n    var handle = undefined;\n    var numDebouncedCalls = 0;\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () {\n            subscription = event(function (cur) {\n                numDebouncedCalls++;\n                output = merger(output, cur);\n                if (leading && !handle) {\n                    emitter.fire(output);\n                }\n                clearTimeout(handle);\n                handle = setTimeout(function () {\n                    var _output = output;\n                    output = undefined;\n                    handle = undefined;\n                    if (!leading || numDebouncedCalls > 1) {\n                        emitter.fire(_output);\n                    }\n                    numDebouncedCalls = 0;\n                }, delay);\n            });\n        },\n        onLastListenerRemove: function () {\n            subscription.dispose();\n        }\n    });\n    return emitter.event;\n}\n/**\n * The EventDelayer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, void 0, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\nexport function mapEvent(event, map) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n    };\n}\nexport function forEach(event, each) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n    };\n}\nexport function filterEvent(event, filter) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n    };\n}\nvar ChainableEvent = /** @class */ (function () {\n    function ChainableEvent(_event) {\n        this._event = _event;\n    }\n    Object.defineProperty(ChainableEvent.prototype, \"event\", {\n        get: function () { return this._event; },\n        enumerable: true,\n        configurable: true\n    });\n    ChainableEvent.prototype.map = function (fn) {\n        return new ChainableEvent(mapEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.forEach = function (fn) {\n        return new ChainableEvent(forEach(this._event, fn));\n    };\n    ChainableEvent.prototype.filter = function (fn) {\n        return new ChainableEvent(filterEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.latch = function () {\n        return new ChainableEvent(latch(this._event));\n    };\n    ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n        return this._event(listener, thisArgs, disposables);\n    };\n    return ChainableEvent;\n}());\nexport function chain(event) {\n    return new ChainableEvent(event);\n}\nexport function stopwatch(event) {\n    var start = new Date().getTime();\n    return mapEvent(once(event), function (_) { return new Date().getTime() - start; });\n}\n/**\n * Buffers the provided event until a first listener comes\n * along, at which point fire all the events at once and\n * pipe the event from then on.\n *\n * ```typescript\n * const emitter = new Emitter<number>();\n * const event = emitter.event;\n * const bufferedEvent = buffer(event);\n *\n * emitter.fire(1);\n * emitter.fire(2);\n * emitter.fire(3);\n * // nothing...\n *\n * const listener = bufferedEvent(num => console.log(num));\n * // 1, 2, 3\n *\n * emitter.fire(4);\n * // 4\n * ```\n */\nexport function buffer(event, nextTick, buffer) {\n    if (nextTick === void 0) { nextTick = false; }\n    if (buffer === void 0) { buffer = []; }\n    buffer = buffer.slice();\n    var listener = event(function (e) {\n        if (buffer) {\n            buffer.push(e);\n        }\n        else {\n            emitter.fire(e);\n        }\n    });\n    var flush = function () {\n        buffer.forEach(function (e) { return emitter.fire(e); });\n        buffer = null;\n    };\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () {\n            if (!listener) {\n                listener = event(function (e) { return emitter.fire(e); });\n            }\n        },\n        onFirstListenerDidAdd: function () {\n            if (buffer) {\n                if (nextTick) {\n                    setTimeout(flush);\n                }\n                else {\n                    flush();\n                }\n            }\n        },\n        onLastListenerRemove: function () {\n            listener.dispose();\n            listener = null;\n        }\n    });\n    return emitter.event;\n}\n/**\n * Similar to `buffer` but it buffers indefinitely and repeats\n * the buffered events to every new listener.\n */\nexport function echo(event, nextTick, buffer) {\n    if (nextTick === void 0) { nextTick = false; }\n    if (buffer === void 0) { buffer = []; }\n    buffer = buffer.slice();\n    event(function (e) {\n        buffer.push(e);\n        emitter.fire(e);\n    });\n    var flush = function (listener, thisArgs) { return buffer.forEach(function (e) { return listener.call(thisArgs, e); }); };\n    var emitter = new Emitter({\n        onListenerDidAdd: function (emitter, listener, thisArgs) {\n            if (nextTick) {\n                setTimeout(function () { return flush(listener, thisArgs); });\n            }\n            else {\n                flush(listener, thisArgs);\n            }\n        }\n    });\n    return emitter.event;\n}\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        this.emitter = new Emitter();\n        this.event = this.emitter.event;\n        this.disposable = EmptyDisposable;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.disposable.dispose();\n            this.disposable = event(this.emitter.fire, this.emitter);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.disposable.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\nexport function fromNodeEventEmitter(emitter, eventName, map) {\n    if (map === void 0) { map = function (id) { return id; }; }\n    var fn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return result.fire(map.apply(void 0, args));\n    };\n    var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n    var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n    var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n    return result.event;\n}\nexport function latch(event) {\n    var firstCall = true;\n    var cache;\n    return filterEvent(event, function (value) {\n        var shouldEmit = firstCall || value !== cache;\n        firstCall = false;\n        cache = value;\n        return shouldEmit;\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/event.js\n// module id = 6\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { once } from './functional.js';\nexport var empty = Object.freeze({\n    dispose: function () { }\n});\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return {\n        dispose: function () {\n            for (var _i = 0, fns_1 = fns; _i < fns_1.length; _i++) {\n                var fn = fns_1[_i];\n                fn();\n            }\n        }\n    };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n    }\n    Disposable.prototype.dispose = function () {\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        this._toDispose.push(t);\n        return t;\n    };\n    return Disposable;\n}());\nexport { Disposable };\nvar ReferenceCollection = /** @class */ (function () {\n    function ReferenceCollection() {\n        this.references = Object.create(null);\n    }\n    ReferenceCollection.prototype.acquire = function (key) {\n        var _this = this;\n        var reference = this.references[key];\n        if (!reference) {\n            reference = this.references[key] = { counter: 0, object: this.createReferencedObject(key) };\n        }\n        var object = reference.object;\n        var dispose = once(function () {\n            if (--reference.counter === 0) {\n                _this.destroyReferencedObject(reference.object);\n                delete _this.references[key];\n            }\n        });\n        reference.counter++;\n        return { object: object, dispose: dispose };\n    };\n    return ReferenceCollection;\n}());\nexport { ReferenceCollection };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js\n// module id = 7\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { TPromise } from './winjs.base.js';\n// ------ BEGIN Hook up error listeners to winjs promises\nvar outstandingPromiseErrors = {};\nfunction promiseErrorHandler(e) {\n    //\n    // e.detail looks like: { exception, error, promise, handler, id, parent }\n    //\n    var details = e.detail;\n    var id = details.id;\n    // If the error has a parent promise then this is not the origination of the\n    //  error so we check if it has a handler, and if so we mark that the error\n    //  was handled by removing it from outstandingPromiseErrors\n    //\n    if (details.parent) {\n        if (details.handler && outstandingPromiseErrors) {\n            delete outstandingPromiseErrors[id];\n        }\n        return;\n    }\n    // Indicate that this error was originated and needs to be handled\n    outstandingPromiseErrors[id] = details;\n    // The first time the queue fills up this iteration, schedule a timeout to\n    // check if any errors are still unhandled.\n    if (Object.keys(outstandingPromiseErrors).length === 1) {\n        setTimeout(function () {\n            var errors = outstandingPromiseErrors;\n            outstandingPromiseErrors = {};\n            Object.keys(errors).forEach(function (errorId) {\n                var error = errors[errorId];\n                if (error.exception) {\n                    onUnexpectedError(error.exception);\n                }\n                else if (error.error) {\n                    onUnexpectedError(error.error);\n                }\n                console.log('WARNING: Promise with no error callback:' + error.id);\n                console.log(error);\n                if (error.exception) {\n                    console.log(error.exception.stack);\n                }\n            });\n        }, 0);\n    }\n}\nTPromise.addEventListener('error', promiseErrorHandler);\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.addListener = function (listener) {\n        var _this = this;\n        this.listeners.push(listener);\n        return function () {\n            _this._removeListener(listener);\n        };\n    };\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype._removeListener = function (listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    };\n    ErrorHandler.prototype.setUnexpectedErrorHandler = function (newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    };\n    ErrorHandler.prototype.getUnexpectedErrorHandler = function () {\n        return this.unexpectedErrorHandler;\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport function readonly(name) {\n    return name\n        ? new Error(\"readonly property '\" + name + \" cannot be changed'\")\n        : new Error('readonly property cannot be changed');\n}\nexport function disposed(what) {\n    var result = new Error(what + \" has been disposed\");\n    result.name = 'DISPOSED';\n    return result;\n}\nexport function isErrorWithActions(obj) {\n    return obj instanceof Error && Array.isArray(obj.actions);\n}\nexport function create(message, options) {\n    if (options === void 0) { options = Object.create(null); }\n    var result = new Error(message);\n    if (options.actions) {\n        result.actions = options.actions;\n    }\n    return result;\n}\nexport function getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/errors.js\n// module id = 8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 9\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 10\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementHash: function (pos) { return a[pos]; }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_originalIds = [];\n        this.m_modifiedIds = [];\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        this.ComputeUniqueIdentifiers();\n    }\n    LcsDiff.prototype.ComputeUniqueIdentifiers = function () {\n        var originalSequenceLength = this.OriginalSequence.getLength();\n        var modifiedSequenceLength = this.ModifiedSequence.getLength();\n        this.m_originalIds = new Array(originalSequenceLength);\n        this.m_modifiedIds = new Array(modifiedSequenceLength);\n        // Create a new hash table for unique elements from the original\n        // sequence.\n        var hashTable = {};\n        var currentUniqueId = 1;\n        var i;\n        // Fill up the hash table for unique elements\n        for (i = 0; i < originalSequenceLength; i++) {\n            var originalElementHash = this.OriginalSequence.getElementHash(i);\n            if (!hasOwnProperty.call(hashTable, originalElementHash)) {\n                // No entry in the hashtable so this is a new unique element.\n                // Assign the element a new unique identifier and add it to the\n                // hash table\n                this.m_originalIds[i] = currentUniqueId++;\n                hashTable[originalElementHash] = this.m_originalIds[i];\n            }\n            else {\n                this.m_originalIds[i] = hashTable[originalElementHash];\n            }\n        }\n        // Now match up modified elements\n        for (i = 0; i < modifiedSequenceLength; i++) {\n            var modifiedElementHash = this.ModifiedSequence.getElementHash(i);\n            if (!hasOwnProperty.call(hashTable, modifiedElementHash)) {\n                this.m_modifiedIds[i] = currentUniqueId++;\n                hashTable[modifiedElementHash] = this.m_modifiedIds[i];\n            }\n            else {\n                this.m_modifiedIds[i] = hashTable[modifiedElementHash];\n            }\n        }\n    };\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return this.m_originalIds[originalIndex] === this.m_modifiedIds[newIndex];\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return this.m_originalIds[index1] === this.m_originalIds[index2];\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return this.m_modifiedIds[index1] === this.m_modifiedIds[index2];\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.ShiftChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex, modifiedIndex;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.ShiftChanges = function (changes) {\n        var mergedDiffs;\n        do {\n            mergedDiffs = false;\n            // Shift all the changes down first\n            for (var i = 0; i < changes.length; i++) {\n                var change = changes[i];\n                var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n                var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n                var checkOriginal = change.originalLength > 0;\n                var checkModified = change.modifiedLength > 0;\n                while (change.originalStart + change.originalLength < originalStop &&\n                    change.modifiedStart + change.modifiedLength < modifiedStop &&\n                    (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                    (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                    change.originalStart++;\n                    change.modifiedStart++;\n                }\n            }\n            // Build up the new list (we have to build a new list because we\n            // might have changes we can merge together now)\n            var result = new Array();\n            var mergedChangeArr = [null];\n            for (var i = 0; i < changes.length; i++) {\n                if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                    mergedDiffs = true;\n                    result.push(mergedChangeArr[0]);\n                    i++;\n                }\n                else {\n                    result.push(changes[i]);\n                }\n            }\n            changes = result;\n        } while (mergedDiffs);\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        return /^\\s*$/.test(this.OriginalSequence.getElementHash(index));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        return /^\\s*$/.test(this.ModifiedSequence.getElementHash(index));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        var result = null;\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js\n// module id = 11\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/functional.js\n// module id = 12\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Event, Emitter } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/cancellation.js\n// module id = 13\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/editor.worker.js\n// module id = 14\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport URI from '../../../base/common/uri.js';\nimport { TPromise } from '../../../base/common/winjs.base.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { Position } from '../core/position.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { getWordAtText, ensureValidWordDefinition } from '../model/wordHelper.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { globals } from '../../../base/common/platform.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj = {\n            done: false,\n            value: ''\n        };\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                obj.done = false;\n                obj.value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                obj.done = true;\n                obj.value = undefined;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n            return obj;\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        return TPromise.as(diffComputer.computeDiff());\n    };\n    BaseEditorSimpleWorker.prototype.computeDirtyDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldPostProcessCharChanges: false,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        return TPromise.as(diffComputer.computeDiff());\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return TPromise.as(edits);\n        }\n        var result = [];\n        var lastEol;\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (!range) {\n                // eol-change only\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: undefined, range: undefined });\n        }\n        return TPromise.as(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return TPromise.as(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (model) {\n            var suggestions = [];\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            var currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\n            var seen = Object.create(null);\n            seen[currentWord] = true;\n            for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n                var word = e.value;\n                if (seen[word]) {\n                    continue;\n                }\n                seen[word] = true;\n                if (!isNaN(Number(word))) {\n                    continue;\n                }\n                suggestions.push({\n                    type: 'text',\n                    label: word,\n                    insertText: word,\n                    noAutoAccept: true,\n                    overwriteBefore: currentWord.length\n                });\n            }\n            return TPromise.as({ suggestions: suggestions });\n        }\n        return undefined;\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        var word = null;\n        if (wordRange !== null) {\n            word = model.getValueInRange(wordRange);\n        }\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return TPromise.as(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var prop in this._foreignModule) {\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return TPromise.as(methods);\n        }\n        return new TPromise(function (c, e) {\n            require([moduleId], function (foreignModule) {\n                _this._foreignModule = foreignModule.create(ctx, createData);\n                var methods = [];\n                for (var prop in _this._foreignModule) {\n                    if (typeof _this._foreignModule[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                c(methods);\n            }, e);\n        });\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return TPromise.wrapError(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\n// module id = 15\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar MarkerSequence = /** @class */ (function () {\n    function MarkerSequence(buffer, startMarkers, endMarkers) {\n        this.buffer = buffer;\n        this.startMarkers = startMarkers;\n        this.endMarkers = endMarkers;\n    }\n    MarkerSequence.prototype.getLength = function () {\n        return this.startMarkers.length;\n    };\n    MarkerSequence.prototype.getElementHash = function (i) {\n        return this.buffer.substring(this.startMarkers[i].offset, this.endMarkers[i].offset);\n    };\n    MarkerSequence.prototype.getStartLineNumber = function (i) {\n        if (i === this.startMarkers.length) {\n            // This is the special case where a change happened after the last marker\n            return this.startMarkers[i - 1].lineNumber + 1;\n        }\n        return this.startMarkers[i].lineNumber;\n    };\n    MarkerSequence.prototype.getStartColumn = function (i) {\n        return this.startMarkers[i].column;\n    };\n    MarkerSequence.prototype.getEndLineNumber = function (i) {\n        return this.endMarkers[i].lineNumber;\n    };\n    MarkerSequence.prototype.getEndColumn = function (i) {\n        return this.endMarkers[i].column;\n    };\n    return MarkerSequence;\n}());\nvar LineMarkerSequence = /** @class */ (function (_super) {\n    __extends(LineMarkerSequence, _super);\n    function LineMarkerSequence(lines) {\n        var _this = this;\n        var buffer = '';\n        var startMarkers = [];\n        var endMarkers = [];\n        for (var pos = 0, i = 0, length_1 = lines.length; i < length_1; i++) {\n            buffer += lines[i];\n            var startColumn = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            var endColumn = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n            startMarkers.push({\n                offset: pos + startColumn - 1,\n                lineNumber: i + 1,\n                column: startColumn\n            });\n            endMarkers.push({\n                offset: pos + endColumn - 1,\n                lineNumber: i + 1,\n                column: endColumn\n            });\n            pos += lines[i].length;\n        }\n        _this = _super.call(this, buffer, startMarkers, endMarkers) || this;\n        return _this;\n    }\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (startIndex, endIndex) {\n        var startMarkers = [];\n        var endMarkers = [];\n        for (var index = startIndex; index <= endIndex; index++) {\n            var startMarker = this.startMarkers[index];\n            var endMarker = this.endMarkers[index];\n            for (var i = startMarker.offset; i < endMarker.offset; i++) {\n                startMarkers.push({\n                    offset: i,\n                    lineNumber: startMarker.lineNumber,\n                    column: startMarker.column + (i - startMarker.offset)\n                });\n                endMarkers.push({\n                    offset: i + 1,\n                    lineNumber: startMarker.lineNumber,\n                    column: startMarker.column + (i - startMarker.offset) + 1\n                });\n            }\n        }\n        return new MarkerSequence(this.buffer, startMarkers, endMarkers);\n    };\n    return LineMarkerSequence;\n}(MarkerSequence));\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementHash(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementHash(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, [\n            new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)\n        ]));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js\n// module id = 16\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js\n// module id = 17\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { LRUCache } from './map.js';\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<|>|&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0, idx = -1;\n    while ((idx = haystack.indexOf(needle, offset)) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return (match && regexp.lastIndex === 0);\n}\nexport function regExpContainsBackreference(regexpValue) {\n    return !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport var canNormalize = typeof (''.normalize) === 'function';\nvar nfcCache = new LRUCache(10000); // bounded to 10000 elements\nexport function normalizeNFC(str) {\n    return normalize(str, 'NFC', nfcCache);\n}\nvar nfdCache = new LRUCache(10000); // bounded to 10000 elements\nexport function normalizeNFD(str) {\n    return normalize(str, 'NFD', nfdCache);\n}\nvar nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str, form, normalizedCache) {\n    if (!canNormalize || !str) {\n        return str;\n    }\n    var cached = normalizedCache.get(str);\n    if (cached) {\n        return cached;\n    }\n    var res;\n    if (nonAsciiCharactersPattern.test(str)) {\n        res = str.normalize(form);\n    }\n    else {\n        res = str;\n    }\n    // Use the cache for fast lookup\n    normalizedCache.set(str, res);\n    return res;\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareIgnoreCase(a, b) {\n    var len = Math.min(a.length, b.length);\n    for (var i = 0; i < len; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (isUpperAsciiLetter(codeA)) {\n            codeA += 32;\n        }\n        if (isUpperAsciiLetter(codeB)) {\n            codeB += 32;\n        }\n        var diff = codeA - codeB;\n        if (diff === 0) {\n            // equal -> ignoreCase\n            continue;\n        }\n        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n        }\n        else {\n            return compare(a.toLowerCase(), b.toLowerCase());\n        }\n    }\n    if (a.length < b.length) {\n        return -1;\n    }\n    else if (a.length > b.length) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction substrEquals(a, aStart, aEnd, b, bStart, bEnd) {\n    while (aStart < aEnd && bStart < bEnd) {\n        if (a[aStart] !== b[bStart]) {\n            return false;\n        }\n        aStart += 1;\n        bStart += 1;\n    }\n    return true;\n}\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a, b) {\n    var aEnd = a.length;\n    var bEnd = b.length;\n    var aStart = aEnd - bEnd;\n    if (aStart === 0) {\n        return a === b ? aEnd : 0;\n    }\n    else if (aStart < 0) {\n        bEnd += aStart;\n        aStart = 0;\n    }\n    while (aStart < aEnd && bEnd > 0) {\n        if (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n            return bEnd;\n        }\n        bEnd -= 1;\n        aStart += 1;\n    }\n    return 0;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text, n) {\n    if (text.length < n) {\n        return text;\n    }\n    var re = /\\b/g;\n    var i = 0;\n    while (re.test(text)) {\n        if (text.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    return text.substring(i).replace(/^\\s/, empty);\n}\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nvar EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nvar COLOR_START = /\\x1b\\[\\d+m/g; // Color\nvar COLOR_END = /\\x1b\\[0?m/g; // Color\nexport function removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(EL, '');\n        str = str.replace(COLOR_START, '');\n        str = str.replace(COLOR_END, '');\n    }\n    return str;\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return (str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function stripUTF8BOM(str) {\n    return startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false; // return early if target or query are undefined\n    }\n    if (target.length < query.length) {\n        return false; // impossible for query to be contained in target\n    }\n    var queryLen = query.length;\n    var targetLower = target.toLowerCase();\n    var index = 0;\n    var lastIndexOf = -1;\n    while (index < queryLen) {\n        var indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars) {\n    if (ignoreEscapedChars === void 0) { ignoreEscapedChars = false; }\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/strings.js\n// module id = 18\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport URI from './uri.js';\nexport function values(forEachable) {\n    var result = [];\n    forEachable.forEach(function (value) { return result.push(value); });\n    return result;\n}\nexport function keys(map) {\n    var result = [];\n    map.forEach(function (value, key) { return result.push(key); });\n    return result;\n}\nexport function getOrSet(map, key, value) {\n    var result = map.get(key);\n    if (result === void 0) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nvar StringIterator = /** @class */ (function () {\n    function StringIterator() {\n        this._value = '';\n        this._pos = 0;\n    }\n    StringIterator.prototype.reset = function (key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    };\n    StringIterator.prototype.next = function () {\n        this._pos += 1;\n        return this;\n    };\n    StringIterator.prototype.join = function (parts) {\n        return parts.join('');\n    };\n    StringIterator.prototype.hasNext = function () {\n        return this._pos < this._value.length - 1;\n    };\n    StringIterator.prototype.cmp = function (a) {\n        var aCode = a.charCodeAt(0);\n        var thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    };\n    StringIterator.prototype.value = function () {\n        return this._value[this._pos];\n    };\n    return StringIterator;\n}());\nexport { StringIterator };\nvar PathIterator = /** @class */ (function () {\n    function PathIterator() {\n    }\n    PathIterator.prototype.reset = function (key) {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    };\n    PathIterator.prototype.hasNext = function () {\n        return this._to < this._value.length;\n    };\n    PathIterator.prototype.join = function (parts) {\n        return parts.join('/');\n    };\n    PathIterator.prototype.next = function () {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        var justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            var ch = this._value.charCodeAt(this._to);\n            if (ch === PathIterator._fwd || ch === PathIterator._bwd) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    };\n    PathIterator.prototype.cmp = function (a) {\n        var aPos = 0;\n        var aLen = a.length;\n        var thisPos = this._from;\n        while (aPos < aLen && thisPos < this._to) {\n            var cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n            aPos += 1;\n            thisPos += 1;\n        }\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n        else if (aPos < aLen) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    };\n    PathIterator.prototype.value = function () {\n        return this._value.substring(this._from, this._to);\n    };\n    PathIterator._fwd = '/'.charCodeAt(0);\n    PathIterator._bwd = '\\\\'.charCodeAt(0);\n    return PathIterator;\n}());\nexport { PathIterator };\nvar TernarySearchTreeNode = /** @class */ (function () {\n    function TernarySearchTreeNode() {\n    }\n    TernarySearchTreeNode.prototype.isEmpty = function () {\n        return !this.left && !this.mid && !this.right && !this.element;\n    };\n    return TernarySearchTreeNode;\n}());\nvar TernarySearchTree = /** @class */ (function () {\n    function TernarySearchTree(segments) {\n        this._iter = segments;\n    }\n    TernarySearchTree.forPaths = function () {\n        return new TernarySearchTree(new PathIterator());\n    };\n    TernarySearchTree.forStrings = function () {\n        return new TernarySearchTree(new StringIterator());\n    };\n    TernarySearchTree.prototype.clear = function () {\n        this._root = undefined;\n    };\n    TernarySearchTree.prototype.set = function (key, element) {\n        var iter = this._iter.reset(key);\n        var node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.str = iter.value();\n        }\n        node = this._root;\n        while (true) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.str = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.str = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.str = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        var oldElement = node.element;\n        node.element = element;\n        return oldElement;\n    };\n    TernarySearchTree.prototype.get = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.element : undefined;\n    };\n    TernarySearchTree.prototype.delete = function (key) {\n        var iter = this._iter.reset(key);\n        var stack = [];\n        var node = this._root;\n        // find and unset node\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.element = undefined;\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    var _a = stack.pop(), dir = _a[0], parent_1 = _a[1];\n                    switch (dir) {\n                        case 1:\n                            parent_1.left = undefined;\n                            break;\n                        case 0:\n                            parent_1.mid = undefined;\n                            break;\n                        case -1:\n                            parent_1.right = undefined;\n                            break;\n                    }\n                    node = parent_1;\n                }\n                break;\n            }\n        }\n    };\n    TernarySearchTree.prototype.findSubstr = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        var candidate;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.element || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.element || candidate;\n    };\n    TernarySearchTree.prototype.findSuperstr = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        while (node) {\n            var val = iter.cmp(node.str);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                var ret = new TernarySearchTree(this._iter);\n                ret._root = node.mid;\n                return ret;\n            }\n        }\n        return undefined;\n    };\n    TernarySearchTree.prototype.forEach = function (callback) {\n        this._forEach(this._root, [], callback);\n    };\n    TernarySearchTree.prototype._forEach = function (node, parts, callback) {\n        if (node) {\n            // left\n            this._forEach(node.left, parts, callback);\n            // node\n            parts.push(node.str);\n            if (node.element) {\n                callback(node.element, this._iter.join(parts));\n            }\n            // mid\n            this._forEach(node.mid, parts, callback);\n            parts.pop();\n            // right\n            this._forEach(node.right, parts, callback);\n        }\n    };\n    return TernarySearchTree;\n}());\nexport { TernarySearchTree };\nvar ResourceMap = /** @class */ (function () {\n    function ResourceMap() {\n        this.map = new Map();\n        this.ignoreCase = false; // in the future this should be an uri-comparator\n    }\n    ResourceMap.prototype.set = function (resource, value) {\n        this.map.set(this.toKey(resource), value);\n    };\n    ResourceMap.prototype.get = function (resource) {\n        return this.map.get(this.toKey(resource));\n    };\n    ResourceMap.prototype.has = function (resource) {\n        return this.map.has(this.toKey(resource));\n    };\n    Object.defineProperty(ResourceMap.prototype, \"size\", {\n        get: function () {\n            return this.map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResourceMap.prototype.clear = function () {\n        this.map.clear();\n    };\n    ResourceMap.prototype.delete = function (resource) {\n        return this.map.delete(this.toKey(resource));\n    };\n    ResourceMap.prototype.forEach = function (clb) {\n        this.map.forEach(clb);\n    };\n    ResourceMap.prototype.values = function () {\n        return values(this.map);\n    };\n    ResourceMap.prototype.toKey = function (resource) {\n        var key = resource.toString();\n        if (this.ignoreCase) {\n            key = key.toLowerCase();\n        }\n        return key;\n    };\n    ResourceMap.prototype.keys = function () {\n        return keys(this.map).map(URI.parse);\n    };\n    return ResourceMap;\n}());\nexport { ResourceMap };\nexport var Touch;\n(function (Touch) {\n    Touch[Touch[\"None\"] = 0] = \"None\";\n    Touch[Touch[\"AsOld\"] = 1] = \"AsOld\";\n    Touch[Touch[\"AsNew\"] = 2] = \"AsNew\";\n})(Touch || (Touch = {}));\nvar LinkedMap = /** @class */ (function () {\n    function LinkedMap() {\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n    }\n    LinkedMap.prototype.clear = function () {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n    };\n    LinkedMap.prototype.isEmpty = function () {\n        return !this._head && !this._tail;\n    };\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedMap.prototype.has = function (key) {\n        return this._map.has(key);\n    };\n    LinkedMap.prototype.get = function (key, touch) {\n        if (touch === void 0) { touch = Touch.None; }\n        var item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    };\n    LinkedMap.prototype.set = function (key, value, touch) {\n        if (touch === void 0) { touch = Touch.None; }\n        var item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key: key, value: value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.AsOld:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.AsNew:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n    };\n    LinkedMap.prototype.delete = function (key) {\n        return !!this.remove(key);\n    };\n    LinkedMap.prototype.remove = function (key) {\n        var item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    };\n    LinkedMap.prototype.shift = function () {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        var item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    };\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\n        var current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            current = current.next;\n        }\n    };\n    LinkedMap.prototype.values = function () {\n        var result = [];\n        var current = this._head;\n        while (current) {\n            result.push(current.value);\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedMap.prototype.keys = function () {\n        var result = [];\n        var current = this._head;\n        while (current) {\n            result.push(current.key);\n            current = current.next;\n        }\n        return result;\n    };\n    /* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n    public keys(): IterableIterator<K> {\n        let current = this._head;\n        let iterator: IterableIterator<K> = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next():IteratorResult<K> {\n                if (current) {\n                    let result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                } else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n\n    public values(): IterableIterator<V> {\n        let current = this._head;\n        let iterator: IterableIterator<V> = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next():IteratorResult<V> {\n                if (current) {\n                    let result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                } else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    */\n    LinkedMap.prototype.trimOld = function (newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        var current = this._head;\n        var currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        current.previous = void 0;\n    };\n    LinkedMap.prototype.addItemFirst = function (item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n    };\n    LinkedMap.prototype.addItemLast = function (item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n    };\n    LinkedMap.prototype.removeItem = function (item) {\n        if (item === this._head && item === this._tail) {\n            this._head = void 0;\n            this._tail = void 0;\n        }\n        else if (item === this._head) {\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            this._tail = item.previous;\n        }\n        else {\n            var next = item.next;\n            var previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n    };\n    LinkedMap.prototype.touch = function (item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n            return;\n        }\n        if (touch === Touch.AsOld) {\n            if (item === this._head) {\n                return;\n            }\n            var next = item.next;\n            var previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = void 0;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = void 0;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n        }\n        else if (touch === Touch.AsNew) {\n            if (item === this._tail) {\n                return;\n            }\n            var next = item.next;\n            var previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = void 0;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = void 0;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n        }\n    };\n    LinkedMap.prototype.toJSON = function () {\n        var data = [];\n        this.forEach(function (value, key) {\n            data.push([key, value]);\n        });\n        return data;\n    };\n    LinkedMap.prototype.fromJSON = function (data) {\n        this.clear();\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var _a = data_1[_i], key = _a[0], value = _a[1];\n            this.set(key, value);\n        }\n    };\n    return LinkedMap;\n}());\nexport { LinkedMap };\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    function LRUCache(limit, ratio) {\n        if (ratio === void 0) { ratio = 1; }\n        var _this = _super.call(this) || this;\n        _this._limit = limit;\n        _this._ratio = Math.min(Math.max(0, ratio), 1);\n        return _this;\n    }\n    Object.defineProperty(LRUCache.prototype, \"limit\", {\n        get: function () {\n            return this._limit;\n        },\n        set: function (limit) {\n            this._limit = limit;\n            this.checkTrim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LRUCache.prototype, \"ratio\", {\n        get: function () {\n            return this._ratio;\n        },\n        set: function (ratio) {\n            this._ratio = Math.min(Math.max(0, ratio), 1);\n            this.checkTrim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.get = function (key) {\n        return _super.prototype.get.call(this, key, Touch.AsNew);\n    };\n    LRUCache.prototype.peek = function (key) {\n        return _super.prototype.get.call(this, key, Touch.None);\n    };\n    LRUCache.prototype.set = function (key, value) {\n        _super.prototype.set.call(this, key, value, Touch.AsNew);\n        this.checkTrim();\n    };\n    LRUCache.prototype.checkTrim = function () {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    };\n    return LRUCache;\n}(LinkedMap));\nexport { LRUCache };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/map.js\n// module id = 19\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nimport { Position } from '../core/position.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    Object.defineProperty(MirrorTextModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var i = 0, len = changes.length; i < len; i++) {\n            var change = changes[i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js\n// module id = 20\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid;\n        var midStop;\n        var midStart;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js\n// module id = 21\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model) {\n        var stateMachine = getStateMachine();\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = classifier.get(chCode);\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js\n// module id = 22\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js\n// module id = 23\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js\n// module id = 24\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var i = 0; i < USUAL_WORD_SEPARATORS.length; i++) {\n        if (allowInWords.indexOf(USUAL_WORD_SEPARATORS[i]) >= 0) {\n            continue;\n        }\n        source += '\\\\' + USUAL_WORD_SEPARATORS[i];\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    var end = text.indexOf(' ', pos);\n    if (end === -1) {\n        end = text.length;\n    }\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js\n// module id = 25\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection, SelectionDirection } from '../core/selection.js';\nimport { TPromise } from '../../../base/common/winjs.base.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Token } from '../core/token.js';\nimport URI from '../../../base/common/uri.js';\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nexport var Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: SelectionDirection,\n        Severity: Severity,\n        MarkerSeverity: MarkerSeverity,\n        Promise: TPromise,\n        Uri: URI,\n        Token: Token\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js\n// module id = 26\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n    }\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.clear = function () {\n        this._first = undefined;\n        this._last = undefined;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this.insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this.insert(element, true);\n    };\n    LinkedList.prototype.insert = function (element, atTheEnd) {\n        var _this = this;\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        return function () {\n            for (var candidate = _this._first; candidate instanceof Node; candidate = candidate.next) {\n                if (candidate !== newNode) {\n                    continue;\n                }\n                if (candidate.prev && candidate.next) {\n                    // middle\n                    var anchor = candidate.prev;\n                    anchor.next = candidate.next;\n                    candidate.next.prev = anchor;\n                }\n                else if (!candidate.prev && !candidate.next) {\n                    // only node\n                    _this._first = undefined;\n                    _this._last = undefined;\n                }\n                else if (!candidate.next) {\n                    // last\n                    _this._last = _this._last.prev;\n                    _this._last.next = undefined;\n                }\n                else if (!candidate.prev) {\n                    // first\n                    _this._first = _this._first.next;\n                    _this._first.prev = undefined;\n                }\n                // done\n                break;\n            }\n        };\n    };\n    LinkedList.prototype.iterator = function () {\n        var element = {\n            done: undefined,\n            value: undefined,\n        };\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    element.done = true;\n                    element.value = undefined;\n                }\n                else {\n                    element.done = false;\n                    element.value = node.element;\n                    node = node.next;\n                }\n                return element;\n            }\n        };\n    };\n    LinkedList.prototype.toArray = function () {\n        var result = [];\n        for (var node = this._first; node instanceof Node; node = node.next) {\n            result.push(node.element);\n        }\n        return result;\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/linkedList.js\n// module id = 27\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000ffff) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000ffff) >>> 0;\n    var chordPart = (keybinding & 0xffff0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding(createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS));\n    }\n    return createSimpleKeybinding(firstPart, OS);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.type = 1 /* Simple */;\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        if (other.type !== 1 /* Simple */) {\n            return false;\n        }\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.getHashCode = function () {\n        var ctrl = this.ctrlKey ? '1' : '0';\n        var shift = this.shiftKey ? '1' : '0';\n        var alt = this.altKey ? '1' : '0';\n        var meta = this.metaKey ? '1' : '0';\n        return \"\" + ctrl + shift + alt + meta + this.keyCode;\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(firstPart, chordPart) {\n        this.type = 2 /* Chord */;\n        this.firstPart = firstPart;\n        this.chordPart = chordPart;\n    }\n    ChordKeybinding.prototype.getHashCode = function () {\n        return this.firstPart.getHashCode() + \";\" + this.chordPart.getHashCode();\n    };\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js\n// module id = 28\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Range } from './range.js';\nimport { Position } from './position.js';\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return SelectionDirection.LTR;\n        }\n        return SelectionDirection.RTL;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js\n// module id = 29\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/editor/common/core/token.js\n// module id = 30\n// module chunks = 0","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 31;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config\n// module id = 31\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { TPromise } from '../winjs.base.js';\nimport { ShallowCancelThenPromise } from '../async.js';\nimport { isWeb } from '../platform.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var req = String(++this._lastSentReq);\n        var reply = {\n            c: null,\n            e: null\n        };\n        var result = new TPromise(function (c, e, p) {\n            reply.c = c;\n            reply.e = e;\n        }, function () {\n            // Cancel not supported\n        });\n        this._pendingReplies[req] = reply;\n        this._send({\n            vsWorker: this._workerId,\n            req: req,\n            method: method,\n            args: args\n        });\n        return result;\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.e(err);\n                return;\n            }\n            reply.c(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyFulfill = null;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            lazyProxyReject(err);\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return TPromise.as(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        _this._lazyProxy = new TPromise(function (c, e, p) {\n            lazyProxyFulfill = c;\n            lazyProxyReject = e;\n        }, function () { });\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._onModuleLoaded.then(function (availableMethods) {\n            var proxy = {};\n            for (var i = 0; i < availableMethods.length; i++) {\n                proxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\n            }\n            lazyProxyFulfill(proxy);\n        }, function (e) {\n            lazyProxyReject(e);\n            _this._onError('Worker failed to load ' + moduleId, e);\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        // Do not allow chaining promises to cancel the proxy creation\n        return new ShallowCancelThenPromise(this._lazyProxy);\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new TPromise(function (c, e, p) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(c, e);\n            }, e);\n        }, function () {\n            // Cancel intentionally not supported\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return TPromise.as(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return TPromise.wrapError(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var prop in this._requestHandler) {\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return TPromise.as(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        var cc;\n        var ee;\n        var r = new TPromise(function (c, e, p) {\n            cc = c;\n            ee = e;\n        });\n        // Use the global require to be sure to get the global config\n        self.require([moduleId], function () {\n            var result = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                result[_i] = arguments[_i];\n            }\n            var handlerModule = result[0];\n            _this._requestHandler = handlerModule.create();\n            var methods = [];\n            for (var prop in _this._requestHandler) {\n                if (typeof _this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            cc(methods);\n        }, ee);\n        return r;\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js\n// module id = 32\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as errors from './errors.js';\nimport { Promise, TPromise } from './winjs.base.js';\nimport { CancellationTokenSource } from './cancellation.js';\nimport { Disposable } from './lifecycle.js';\nimport { Emitter } from './event.js';\nexport function isPromiseLike(obj) {\n    return obj && typeof obj.then === 'function';\n}\nexport function toPromiseLike(arg) {\n    if (isPromiseLike(arg)) {\n        return arg;\n    }\n    else {\n        return TPromise.as(arg);\n    }\n}\nexport function asWinJsPromise(callback) {\n    var source = new CancellationTokenSource();\n    return new TPromise(function (resolve, reject, progress) {\n        var item = callback(source.token);\n        if (item instanceof TPromise) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            }, progress);\n        }\n        else if (isPromiseLike(item)) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            });\n        }\n        else {\n            source.dispose();\n            resolve(item);\n        }\n    }, function () {\n        source.cancel();\n    });\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nexport function wireCancellationToken(token, promise, resolveAsUndefinedWhenCancelled) {\n    var subscription = token.onCancellationRequested(function () { return promise.cancel(); });\n    if (resolveAsUndefinedWhenCancelled) {\n        promise = promise.then(undefined, function (err) {\n            if (!errors.isPromiseCanceledError(err)) {\n                return TPromise.wrapError(err);\n            }\n            return undefined;\n        });\n    }\n    return always(promise, function () { return subscription.dispose(); });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nvar Throttler = /** @class */ (function () {\n    function Throttler() {\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    Throttler.prototype.queue = function (promiseFactory) {\n        var _this = this;\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                var onComplete_1 = function () {\n                    _this.queuedPromise = null;\n                    var result = _this.queue(_this.queuedPromiseFactory);\n                    _this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new TPromise(function (c, e, p) {\n                    _this.activePromise.then(onComplete_1, onComplete_1, p).done(c);\n                }, function () {\n                    _this.activePromise.cancel();\n                });\n            }\n            return new TPromise(function (c, e, p) {\n                _this.queuedPromise.then(c, e, p);\n            }, function () {\n                // no-op\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new TPromise(function (c, e, p) {\n            _this.activePromise.done(function (result) {\n                _this.activePromise = null;\n                c(result);\n            }, function (err) {\n                _this.activePromise = null;\n                e(err);\n            }, p);\n        }, function () {\n            _this.activePromise.cancel();\n        });\n    };\n    return Throttler;\n}());\nexport { Throttler };\n// TODO@Joao: can the previous throttler be replaced with this?\nvar SimpleThrottler = /** @class */ (function () {\n    function SimpleThrottler() {\n        this.current = TPromise.wrap(null);\n    }\n    SimpleThrottler.prototype.queue = function (promiseTask) {\n        return this.current = this.current.then(function () { return promiseTask(); });\n    };\n    return SimpleThrottler;\n}());\nexport { SimpleThrottler };\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so the he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nvar Delayer = /** @class */ (function () {\n    function Delayer(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = null;\n        this.completionPromise = null;\n        this.onSuccess = null;\n        this.task = null;\n    }\n    Delayer.prototype.trigger = function (task, delay) {\n        var _this = this;\n        if (delay === void 0) { delay = this.defaultDelay; }\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new TPromise(function (c) {\n                _this.onSuccess = c;\n            }, function () {\n                // no-op\n            }).then(function () {\n                _this.completionPromise = null;\n                _this.onSuccess = null;\n                var task = _this.task;\n                _this.task = null;\n                return task();\n            });\n        }\n        this.timeout = setTimeout(function () {\n            _this.timeout = null;\n            _this.onSuccess(null);\n        }, delay);\n        return this.completionPromise;\n    };\n    Delayer.prototype.isTriggered = function () {\n        return this.timeout !== null;\n    };\n    Delayer.prototype.cancel = function () {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.completionPromise.cancel();\n            this.completionPromise = null;\n        }\n    };\n    Delayer.prototype.cancelTimeout = function () {\n        if (this.timeout !== null) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    };\n    return Delayer;\n}());\nexport { Delayer };\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * Simply combine the two mail man strategies from the Throttler and Delayer\n * helpers, for an analogy.\n */\nvar ThrottledDelayer = /** @class */ (function (_super) {\n    __extends(ThrottledDelayer, _super);\n    function ThrottledDelayer(defaultDelay) {\n        var _this = _super.call(this, defaultDelay) || this;\n        _this.throttler = new Throttler();\n        return _this;\n    }\n    ThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\n        var _this = this;\n        return _super.prototype.trigger.call(this, function () { return _this.throttler.queue(promiseFactory); }, delay);\n    };\n    return ThrottledDelayer;\n}(Delayer));\nexport { ThrottledDelayer };\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nvar Barrier = /** @class */ (function () {\n    function Barrier() {\n        var _this = this;\n        this._isOpen = false;\n        this._promise = new TPromise(function (c, e, p) {\n            _this._completePromise = c;\n        }, function () {\n            console.warn('You should really not try to cancel this ready promise!');\n        });\n    }\n    Barrier.prototype.isOpen = function () {\n        return this._isOpen;\n    };\n    Barrier.prototype.open = function () {\n        this._isOpen = true;\n        this._completePromise(true);\n    };\n    Barrier.prototype.wait = function () {\n        return this._promise;\n    };\n    return Barrier;\n}());\nexport { Barrier };\nvar ShallowCancelThenPromise = /** @class */ (function (_super) {\n    __extends(ShallowCancelThenPromise, _super);\n    function ShallowCancelThenPromise(outer) {\n        var _this = this;\n        var completeCallback, errorCallback, progressCallback;\n        _this = _super.call(this, function (c, e, p) {\n            completeCallback = c;\n            errorCallback = e;\n            progressCallback = p;\n        }, function () {\n            // cancel this promise but not the\n            // outer promise\n            errorCallback(errors.canceled());\n        }) || this;\n        outer.then(completeCallback, errorCallback, progressCallback);\n        return _this;\n    }\n    return ShallowCancelThenPromise;\n}(TPromise));\nexport { ShallowCancelThenPromise };\n/**\n * Replacement for `WinJS.Promise.timeout`.\n */\nexport function timeout(n) {\n    return new Promise(function (resolve) { return setTimeout(resolve, n); });\n}\nfunction isWinJSPromise(candidate) {\n    return TPromise.is(candidate) && typeof candidate.done === 'function';\n}\nexport function always(winjsPromiseOrPromiseLike, f) {\n    if (isWinJSPromise(winjsPromiseOrPromiseLike)) {\n        return new TPromise(function (c, e, p) {\n            winjsPromiseOrPromiseLike.done(function (result) {\n                try {\n                    f(result);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                c(result);\n            }, function (err) {\n                try {\n                    f(err);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                e(err);\n            }, function (progress) {\n                p(progress);\n            });\n        }, function () {\n            winjsPromiseOrPromiseLike.cancel();\n        });\n    }\n    else {\n        // simple\n        winjsPromiseOrPromiseLike.then(function (_) { return f(); }, function (_) { return f(); });\n        return winjsPromiseOrPromiseLike;\n    }\n}\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\nexport function sequence(promiseFactories) {\n    var results = [];\n    // reverse since we start with last element using pop()\n    promiseFactories = promiseFactories.reverse();\n    function next() {\n        if (promiseFactories.length) {\n            return promiseFactories.pop()();\n        }\n        return null;\n    }\n    function thenHandler(result) {\n        if (result !== undefined && result !== null) {\n            results.push(result);\n        }\n        var n = next();\n        if (n) {\n            return n.then(thenHandler);\n        }\n        return TPromise.as(results);\n    }\n    return TPromise.as(null).then(thenHandler);\n}\nexport function first(promiseFactories, shouldStop) {\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\n    promiseFactories = promiseFactories.reverse().slice();\n    var loop = function () {\n        if (promiseFactories.length === 0) {\n            return TPromise.as(null);\n        }\n        var factory = promiseFactories.pop();\n        var promise = factory();\n        return promise.then(function (result) {\n            if (shouldStop(result)) {\n                return TPromise.as(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nvar Limiter = /** @class */ (function () {\n    function Limiter(maxDegreeOfParalellism) {\n        this.maxDegreeOfParalellism = maxDegreeOfParalellism;\n        this.outstandingPromises = [];\n        this.runningPromises = 0;\n        this._onFinished = new Emitter();\n    }\n    Object.defineProperty(Limiter.prototype, \"onFinished\", {\n        get: function () {\n            return this._onFinished.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Limiter.prototype, \"size\", {\n        get: function () {\n            return this.runningPromises + this.outstandingPromises.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Limiter.prototype.queue = function (promiseFactory) {\n        var _this = this;\n        return new TPromise(function (c, e, p) {\n            _this.outstandingPromises.push({\n                factory: promiseFactory,\n                c: c,\n                e: e,\n                p: p\n            });\n            _this.consume();\n        });\n    };\n    Limiter.prototype.consume = function () {\n        var _this = this;\n        while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n            var iLimitedTask = this.outstandingPromises.shift();\n            this.runningPromises++;\n            var promise = iLimitedTask.factory();\n            promise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\n            promise.done(function () { return _this.consumed(); }, function () { return _this.consumed(); });\n        }\n    };\n    Limiter.prototype.consumed = function () {\n        this.runningPromises--;\n        if (this.outstandingPromises.length > 0) {\n            this.consume();\n        }\n        else {\n            this._onFinished.fire();\n        }\n    };\n    Limiter.prototype.dispose = function () {\n        this._onFinished.dispose();\n    };\n    return Limiter;\n}());\nexport { Limiter };\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nvar Queue = /** @class */ (function (_super) {\n    __extends(Queue, _super);\n    function Queue() {\n        return _super.call(this, 1) || this;\n    }\n    return Queue;\n}(Limiter));\nexport { Queue };\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nvar ResourceQueue = /** @class */ (function () {\n    function ResourceQueue() {\n        this.queues = Object.create(null);\n    }\n    ResourceQueue.prototype.queueFor = function (resource) {\n        var _this = this;\n        var key = resource.toString();\n        if (!this.queues[key]) {\n            var queue_1 = new Queue();\n            queue_1.onFinished(function () {\n                queue_1.dispose();\n                delete _this.queues[key];\n            });\n            this.queues[key] = queue_1;\n        }\n        return this.queues[key];\n    };\n    return ResourceQueue;\n}());\nexport { ResourceQueue };\nexport function setDisposableTimeout(handler, timeout) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    var handle = setTimeout.apply(void 0, [handler, timeout].concat(args));\n    return { dispose: function () { clearTimeout(handle); } };\n}\nvar TimeoutTimer = /** @class */ (function (_super) {\n    __extends(TimeoutTimer, _super);\n    function TimeoutTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    TimeoutTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    TimeoutTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    };\n    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\n        var _this = this;\n        this.cancel();\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\n        var _this = this;\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    return TimeoutTimer;\n}(Disposable));\nexport { TimeoutTimer };\nvar IntervalTimer = /** @class */ (function (_super) {\n    __extends(IntervalTimer, _super);\n    function IntervalTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    IntervalTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    IntervalTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearInterval(this._token);\n            this._token = -1;\n        }\n    };\n    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\n        this.cancel();\n        this._token = setInterval(function () {\n            runner();\n        }, interval);\n    };\n    return IntervalTimer;\n}(Disposable));\nexport { IntervalTimer };\nvar RunOnceScheduler = /** @class */ (function () {\n    function RunOnceScheduler(runner, timeout) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = timeout;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    RunOnceScheduler.prototype.dispose = function () {\n        this.cancel();\n        this.runner = null;\n    };\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    RunOnceScheduler.prototype.cancel = function () {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    };\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    RunOnceScheduler.prototype.schedule = function (delay) {\n        if (delay === void 0) { delay = this.timeout; }\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    };\n    /**\n     * Returns true if scheduled.\n     */\n    RunOnceScheduler.prototype.isScheduled = function () {\n        return this.timeoutToken !== -1;\n    };\n    RunOnceScheduler.prototype.onTimeout = function () {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.runner();\n        }\n    };\n    return RunOnceScheduler;\n}());\nexport { RunOnceScheduler };\nexport function nfcall(fn) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return new TPromise(function (c, e) { return fn.apply(void 0, args.concat([function (err, result) { return err ? e(err) : c(result); }])); }, function () { return null; });\n}\nexport function ninvoke(thisArg, fn) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return new TPromise(function (c, e) { return fn.call.apply(fn, [thisArg].concat(args, [function (err, result) { return err ? e(err) : c(result); }])); }, function () { return null; });\n}\n/**\n * An emitter that will ignore any events that occur during a specific code\n * execution triggered via throttle() until the promise has finished (either\n * successfully or with an error). Only after the promise has finished, the\n * last event that was fired during the operation will get emitted.\n *\n */\nvar ThrottledEmitter = /** @class */ (function (_super) {\n    __extends(ThrottledEmitter, _super);\n    function ThrottledEmitter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ThrottledEmitter.prototype.throttle = function (promise) {\n        var _this = this;\n        this.suspended = true;\n        return always(promise, function () { return _this.resume(); });\n    };\n    ThrottledEmitter.prototype.fire = function (event) {\n        if (this.suspended) {\n            this.lastEvent = event;\n            this.hasLastEvent = true;\n            return;\n        }\n        return _super.prototype.fire.call(this, event);\n    };\n    ThrottledEmitter.prototype.resume = function () {\n        this.suspended = false;\n        if (this.hasLastEvent) {\n            this.fire(this.lastEvent);\n        }\n        this.hasLastEvent = false;\n        this.lastEvent = void 0;\n    };\n    return ThrottledEmitter;\n}(Emitter));\nexport { ThrottledEmitter };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/base/common/async.js\n// module id = 33\n// module chunks = 0"],"sourceRoot":""}