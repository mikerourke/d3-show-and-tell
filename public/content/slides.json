{
  "1": {
    "slideNumber": 1,
    "title": "Introduction to D3 and SVG",
    "code": "// This is the D3 logo taken right from their website.\nvar D3Logo = () => (\n  <svg width={96} height={96}>\n    <clipPath id=\"clip\">\n      <path\n        d={`\n          M0,0\n          h7.75\n          a45.5,45.5 0 1 1 0,91\n          h-7.75\n          v-20\n          h7.75\n          a25.5,25.5 0 1 0 0,-51\n          h-7.75\n          z\n          m36.2510,0\n          h32\n          a27.75,27.75 0 0 1 21.331,45.5\n          a27.75,27.75 0 0 1 -21.331,45.5\n          h-32\n          a53.6895,53.6895 0 0 0 18.7464,-20\n          h13.2526\n          a7.75,7.75 0 1 0 0,-15.5\n          h-7.75\n          a53.6895,53.6895 0 0 0 0,-20\n          h7.75\n          a7.75,7.75 0 1 0 0,-15.5\n          h-13.2526\n          a53.6895,53.6895 0 0 0 -18.7464,-20\n          z\n        `} />\n    </clipPath>\n    <linearGradient\n      id=\"gradient-1\"\n      gradientUnits=\"userSpaceOnUse\"\n      x1={7}\n      y1={64}\n      x2={50}\n      y2={107}\n    >\n      <stop offset=\"0\" stopColor=\"#f9a03c\" />\n      <stop offset=\"1\" stopColor=\"#f7974e\" />\n    </linearGradient>\n    <linearGradient\n      id=\"gradient-2\"\n      gradientUnits=\"userSpaceOnUse\"\n      x1=\"2\"\n      y1=\"-2\"\n      x2=\"87\"\n      y2=\"84\"\n    >\n      <stop offset=\"0\" stopColor=\"#f26d58\" />\n      <stop offset=\"1\" stopColor=\"#f9a03c\" />\n    </linearGradient>\n    <linearGradient\n      id=\"gradient-3\"\n      gradientUnits=\"userSpaceOnUse\"\n      x1={45}\n      y1={-10}\n      x2={108}\n      y2={53}\n    >\n      <stop offset=\"0\" stopColor=\"#b84e51\" />\n      <stop offset=\"1\" stopColor=\"#f68e48\" />\n    </linearGradient>\n    <g clipPath=\"url(#clip)\">\n      <path d=\"M-100,-102m-27,0v300h300z\" fill=\"url(#gradient-1)\" />\n      <path d=\"M-100,-102m27,0h300v300z\" fill=\"url(#gradient-3)\" />\n      <path\n        d=\"M-100,-102l300,300\"\n        fill=\"none\"\n        stroke=\"url(#gradient-2)\"\n        strokeWidth={40}\n      />\n    </g>\n  </svg>\n);\n\n// Here's some reusable text for our slide.\nvar SlideText = (props) => (\n  <text\n    textAnchor=\"middle\"\n    alignmentBaseline=\"central\"\n    fill=\"white\"\n    fontFamily=\"Poppins\"\n    fontSize={112}\n    {...props}\n  >\n    {props.children}\n  </text>\n);\n\n// This is the footer (with Pandera Labs and such).\nvar SlideFooter = () => (\n  <g transform=\"translate(0, 1004)\">\n    <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n    <image href=\"../images/pandera-labs.png\" x={1135} y={0} width={305} />\n  </g>\n);\n\n// This is the whole kit and caboodle!\nvar Slide = () => (\n  <svg viewBox=\"0 0 1440 1080\" className=\"wrapper\">\n    <rect x={0} y={0} width=\"100%\" height=\"100%\" fill=\"#3274B7\" />\n    <SlideText x=\"43%\" y=\"40%\">Introduction to</SlideText>\n    <svg viewBox=\"0 0 800 800\" x=\"61%\" y=\"35%\">\n      <D3Logo />\n    </svg>\n    <SlideText x=\"50%\" y=\"50%\">and SVG</SlideText>\n    <SlideFooter />\n  </svg>\n);\n\n// This method is required to render the React component, there's\n// some mojo going on behind the scenes.\nrender(<Slide />);",
    "styles": "#contents {\n  box-shadow: var(--main-box-shadow);\n}",
    "datasetName": ""
  },
  "2": {
    "slideNumber": 2,
    "title": "A Quick Overview of SVG",
    "code": "// Some useful variables for figuring out slide layout\nvar slideHeight = 1080;\nvar headerHeight = 180;\nvar footerHeight = 75;\n\n// Reusable component with common props for text\nvar SlideText = ({ children, ...props }) => (\n  <text\n    alignmentBaseline=\"central\"\n    fill=\"#4A4A4A\"\n    {...props}\n  >\n    {children}\n  </text>\n);\n\n// Extrapolates the slide number from the current path and adds it to the footer\nvar slideNumber = +window.location.pathname.replace('/slides/', '');\n\n// Footer of the slide with the logo and slide number\nvar SlideFooter = () => (\n  <g\n    transform={`translate(0, ${slideHeight - footerHeight})`}\n    className=\"slideFooter\"\n  >\n    <line x1={0} y1={0} x2=\"100%\" y2={0} />\n    <text x=\"50%\" y={40}>\n      {slideNumber}\n    </text>\n    <image href=\"../images/pandera-labs.png\" x={1135} y={0} width={305} />\n  </g>\n);\n\n// Header of the slide with the slide title\nvar SlideHeader = () => (\n  <svg x={0} y={0} width=\"100%\" height={headerHeight} className=\"slideHeader\">\n    <rect x={0} y={0} />\n    <SlideText x=\"50%\" y=\"50%\">\n      {document.querySelector('#slideTitle').innerHTML}\n    </SlideText>\n  </svg>\n);\n\n// Body of the slide (between header and footer)\nvar SlideBody = (props) => (\n  <svg\n    x={0}\n    y={0}\n    width=\"100%\"\n    height={slideHeight - headerHeight - footerHeight}\n  >\n    <g transform={`translate(75, ${headerHeight + 75})`}>\n      {React.Children.map(props.children, (child, index) => (\n        <g transform={`translate(0, ${index * 90})`}>\n          {child}\n        </g>\n      ))}\n    </g>\n  </svg>\n);\n\n// Line item in the slide body (level specifies the indentation)\nvar BulletPoint = props => {\n  if (!props.isShown) return null;\n  var level = props.level || 0;\n  const bulletClass = props.level % 2 ? 'hollowBullet' : 'filledBullet';\n  return (\n    <g\n      transform={`translate(${level * 75}, 0)`}\n      className=\"animated fadeIn\"\n    >\n      <circle cx={0} cy={0} r={5} className={bulletClass} />\n      <g transform=\"translate(15, 0)\">\n        <SlideText fontFamily=\"Work Sans\" fontSize={props.fontSize || 48}>\n          {props.children}\n        </SlideText>\n      </g>\n    </g>\n  );\n};\n\n// Top-level slide component\nvar Slide = React.createClass({\n  getInitialState() {\n    var shownItems = _.range(1, 7).reduce((acc, item) => ({\n      ...acc,\n      [item]: false,\n    }), {});\n    var lastShownItem = '0';\n    return {\n      shownItems,\n      lastShownItem,\n    };\n  },\n\n  // Updates the visibility of the bulleted items when the slide is clicked on:\n  handleNavigationClick() {\n    var { lastShownItem, shownItems } = this.state;\n    var nextItem = +lastShownItem + 1;\n    var newShownItems = Object.assign({}, shownItems, { [nextItem]: true });\n    this.setState({\n      shownItems: newShownItems,\n      lastShownItem: nextItem.toString(),\n    });\n  },\n\n  getIsShown(item) {\n    return this.state.shownItems[item];\n  },\n\n  render() {\n    return (\n      <svg\n        viewBox={`0 0 1440 ${slideHeight}`}\n        onClick={this.handleNavigationClick}\n      >\n        <SlideHeader />\n        <SlideBody>\n          <BulletPoint isShown={this.getIsShown('1')}>\n            SVG stands for Scalable Vector Graphics\n          </BulletPoint>\n          <BulletPoint isShown={this.getIsShown('2')}>\n            Why use it?\n          </BulletPoint>\n          <BulletPoint isShown={this.getIsShown('3')} level={1}>\n            {\"It's neat\"}\n          </BulletPoint>\n          <BulletPoint isShown={this.getIsShown('4')} level={1}>\n            {\"You're limited only by your imagination\"}\n          </BulletPoint>\n          <BulletPoint isShown={this.getIsShown('5')} level={1}>\n            {\"It is impossible to misspell\"}\n          </BulletPoint>\n          <BulletPoint isShown={this.getIsShown('6')} fontSize={44}>\n            SVG is great because it does exactly what you tell it to do\n          </BulletPoint>\n          <BulletPoint isShown={this.getIsShown('7')}>\n            SVG also sucks because it does exactly what you tell it to do\n          </BulletPoint>\n        </SlideBody>\n        <SlideFooter />\n      </svg>\n    );\n  }\n});\n\n// Render the slide:\nrender(<Slide />);\n",
    "styles": "#contents {\n  box-shadow: var(--main-box-shadow);\n}",
    "datasetName": ""
  },
  "3": {
    "slideNumber": 3,
    "title": "A Jubilee of Elements!",
    "code": "var svgElementNames = [\n  'a', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateColor',\n  'animateMotion', 'animateTransform', 'circle', 'clipPath', 'color-profile',\n  'cursor', 'defs', 'desc', 'discard', 'ellipse', 'feBlend', 'feColorMatrix',\n  'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting',\n  'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA',\n  'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge',\n  'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting',\n  'feSpotLight', 'feTile', 'feTurbulence', 'filter', 'font', 'font-face',\n  'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri',\n  'foreignObject', 'g', 'glyph', 'glyphRef', 'hatch', 'hatchpath', 'hkern',\n  'image', 'line', 'linearGradient', 'marker', 'mask', 'mesh', 'meshgradient',\n  'meshpatch', 'meshrow', 'metadata', 'missing-glyph', 'mpath', 'path',\n  'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'script',\n  'set', 'solidcolor', 'stop', 'style', 'svg', 'switch', 'symbol', 'text',\n  'textPath', 'title', 'tref', 'tspan', 'unknown', 'use', 'view', 'vkern',\n];\nvar svgElementCount = svgElementNames.length;\n\nvar SvgItemBulletPoint = props => (\n  <BulletPoint\n    level={1}\n    style={{ fontFamily: \"Courier New\", fontSize: 36 }}\n    {...props}\n  >\n    {`<${props.children}>`}\n  </BulletPoint>\n);\n\nvar SvgItemsBulletPoint = React.createClass({\n  getInitialState() {\n    return {\n      currentIndex: 0,\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.isShown !== this.props.isShown && nextProps.isShown === true) {\n      this.poll();\n    };\n  },\n\n  poll() {\n    setTimeout(() => {\n      if (this.state.currentIndex === svgElementCount) {\n        this.setState({ currentIndex: 0 })\n      } else {\n        this.setState(state => ({ currentIndex: state.currentIndex + 1 }));\n      }\n      this.poll();\n    }, 200);\n  },\n\n  render() {\n    return (\n      <SvgItemBulletPoint {...this.props}>\n        {svgElementNames[this.state.currentIndex]}\n      </SvgItemBulletPoint>\n    );\n  }\n});\n\nvar Slide = () => (\n  <SlideTemplate>\n    <BulletPoint>There are all kinds of SVG Elements!</BulletPoint>\n    <SvgItemsBulletPoint>text</SvgItemsBulletPoint>\n    <BulletPoint>\n      We only care about a few though:\n    </BulletPoint>\n    <SvgItemBulletPoint>svg</SvgItemBulletPoint>\n    <SvgItemBulletPoint>g</SvgItemBulletPoint>\n    <SvgItemBulletPoint>path</SvgItemBulletPoint>\n    <SvgItemBulletPoint>line</SvgItemBulletPoint>\n    <SvgItemBulletPoint offset={300} position={4}>rect</SvgItemBulletPoint>\n    <SvgItemBulletPoint offset={300} position={5}>circle</SvgItemBulletPoint>\n    <SvgItemBulletPoint offset={300} position={6}>text</SvgItemBulletPoint>\n    <BulletPoint position={8}>We can do some pretty fun stuff with SVG...</BulletPoint>\n  </SlideTemplate>\n);\n\nrender(<Slide />);\n",
    "styles": "#contents {\n  box-shadow: var(--main-box-shadow);\n}",
    "datasetName": ""
  },
  "4": {
    "slideNumber": 4,
    "title": "Fun Stuff with SVG",
    "code": "var colors = {\n  blue: '#0075dc',\n  cyan: '#7ddbda',\n  skyBlue: '#17a6e0',\n  red: '#ff4439',\n};\n\nvar PanderaLabsLogo = props => (\n  <svg\n    id=\"pLabsLogo\"\n    x={0}\n    y={0}\n    viewBox=\"0 0 5000 1100\"\n    xmlSpace=\"preserve\"\n    {...props}\n  >\n    <g>\n      <g name=\"logoArcElements\">\n        <path\n          id=\"outerLowerArc\"\n          fill={colors.blue}\n          d={`\n            M648.5,1038.1\n            c-80.9,0-157.9-25.5-222.5-73.9\n            c-8.7-6.5-10.4-18.7-4-27.4\n            s18.7-10.4,27.4-4\n            c57.8,43.2,126.7,66.1,199.1,66.1\n            c88.9,0,172.4-34.6,235.3-97.5\n            c62.8-62.8,97.5-146.4,97.5-235.3\n            c0-72.7-23-141.7-66.5-199.6\n            c-6.5-8.6-4.7-20.9,3.9-27.4\n            c8.6-6.5,20.9-4.7,27.4,3.9\n            c48.6,64.8,74.3,141.9,74.3,223.1\n            c0,50.2-9.8,98.9-29.2,144.8\n            c-18.7,44.3-45.5,84.1-79.7,118.2\n            c-34.1,34.1-73.9,61-118.2,79.7\n            C747.4,1028.3,698.7,1038.1,648.5,1038.1\n            z\n          `}\n        />\n        <path\n          id=\"outerUpperArc\"\n          fill={colors.blue}\n          d={`\n            M366.8,897.5\n            c-5.9,0-11.8-2.7-15.7-7.8\n            c-48.8-64.8-74.6-142.1-74.6-223.4\n            c0-50.2,9.8-98.9,29.2-144.8\n            c18.7-44.3,45.5-84.1,79.7-118.2\n            c34.1-34.1,73.9-61,118.2-79.7\n            c45.9-19.4,94.6-29.2,144.8-29.2\n            c81.2,0,158.3,25.7,223,74.3\n            c8.6,6.5,10.4,18.8,3.9,27.4\n            c-6.5,8.6-18.8,10.4-27.4,3.9\n            c-57.9-43.5-126.9-66.4-199.5-66.4\n            c-88.9,0-172.4,34.6-235.3,97.5\n            c-62.8,62.8-97.5,146.4-97.5,235.3\n            c0,72.8,23.1,141.9,66.7,199.9\n            c6.5,8.6,4.8,20.9-3.9,27.4\n            C375,896.2,370.9,897.5,366.8,897.5\n            z\n          `}\n        />\n        <path\n          id=\"centerLowerArc\"\n          fill={colors.cyan}\n          d={`\n            M648.3,926.6\n            c-8.2,0-16.5-0.4-24.8-1.2\n            c-60-5.7-116.5-32.4-159.1-75.1\n            c-42.6-42.6-69.2-99-75-158.9\n            c-5.7-59.1,9-118.7,41.4-168\n            c5.9-9,18.1-11.5,27.1-5.6\n            c9,5.9,11.5,18.1,5.6,27.1\n            c-27.5,41.9-40,92.6-35.2,142.8\n            c4.9,50.9,27.6,98.8,63.7,135\n            c36.2,36.2,84.3,58.9,135.2,63.8\n            c50.3,4.8,101-7.8,142.9-35.4\n            c9-6,21.2-3.5,27.1,5.5\n            c6,9,3.5,21.2-5.5,27.1\n            C749.3,911.7,699.1,926.6,648.3,926.6\n            z\n          `}\n        />\n        <path\n          id=\"centerUpperArc\"\n          fill={colors.skyBlue}\n          d={`\n            M850.6,816.6\n            c-3.6,0-7.3-1-10.6-3.2\n            c-9.1-5.9-11.7-18-5.8-27.1\n            c27.1-41.8,39.3-92.3,34.3-142.2\n            c-5-50.6-27.7-98.3-63.7-134.3\n            s-83.7-58.6-134.3-63.7\n            c-49.9-5-100.4,7.2-142.2,34.3\n            c-9.1,5.9-21.2,3.3-27.1-5.8\n            c-5.9-9.1-3.3-21.2,5.8-27.1\n            c49.2-31.9,108.7-46.3,167.4-40.4\n            c59.6,5.9,115.7,32.6,158.1,75s69,98.5,75,158.1\n            c5.9,58.7-8.5,118.2-40.4,167.4C863.3,813.5,857,816.6,850.6,816.6\n            z\n          `}\n        />\n        <path\n          id=\"innermostArc\"\n          fill={colors.red}\n          d={`\n            M648.5,815.1\n            c-18.8,0-37.8-3.6-56-11\n            c-10-4.1-14.8-15.5-10.8-25.5\n            c4.1-10,15.5-14.8,25.5-10.8\n            c40.9,16.6,87.5,7.1,118.8-24.1\n            c42.7-42.7,42.7-112.3,0-155\n            c-42.7-42.7-112.3-42.7-155,0\n            c-31.6,31.6-40.9,78.6-23.6,119.9\n            c4.2,10-0.5,21.4-10.5,25.6\n            c-10,4.2-21.4-0.5-25.6-10.5\n            c-11.3-26.9-14.3-56.3-8.9-85.1\n            c5.5-29.5,19.7-56.3,41-77.6\n            c58-58,152.4-58,210.4,0\n            c58,58,58,152.4,0,210.4\n            C725.1,800,687.2,815.1,648.5,815.1\n            z\n          `}\n        />\n      </g>\n      <g name=\"letters\">\n        <path\n          id=\"letterP\"\n          fill={colors.blue}\n          d={`\n            M1533.4,481.5\n            c27.6,25.5,41.4,59,41.4,100.4\n            c0,41.4-13.7,74.8-41.1,100.1\n            c-27.4,25.3-68,38-121.8,38h-97.3\n            v199.4\n            h-48.3\n            V443.1H1412\n            C1465.3,443.1,1505.8,455.9,1533.4,481.5\n            z\n            M1314.7,680.6\n            h97.3\n            c75.9,0,113.9-33,113.9-99\n            c0-66-38-99-113.9-99h-97.3V680.6\n            z\n          `}\n        />\n        <path\n          id=\"letterA\"\n          fill={colors.blue}\n          d={`\n            M1681.8,870.3\n            c-34.5-37.3-51.8-84.8-51.8-142.5\n            c0-57.7,17.1-104.2,51.4-139.4\n            c34.3-35.2,77.9-52.8,130.8-52.8\n            c34,0,63.9,8.3,89.7,24.8\n            c25.8,16.6,44.9,38,57.3,64.2\n            v-82.1\n            h48.3\n            v376.8\n            h-48.3\n            v-82.8\n            c-12.4,26.2-31.5,47.7-57.3,64.5\n            c-25.8,16.8-55.7,25.2-89.7,25.2\n            C1759.8,926.2,1716.3,907.6,1681.8,870.3\n            z\n            M1918.2,842.4\n            c27.4-28.3,41.1-65.4,41.1-111.5\n            c0-46-13.7-83.2-41.1-111.5\n            c-27.4-28.3-60.4-42.4-99-42.4\n            s-71.5,13.6-98.7,40.7\n            c-27.2,27.2-40.7,63.8-40.7,110.1\n            c0,46.2,13.7,84,41.1,113.2\n            c27.4,29.2,60.3,43.8,98.7,43.8\n            C1857.9,884.8,1890.8,870.7,1918.2,842.4\n            z\n          `}\n        />\n        <path\n          id=\"letterN\"\n          fill={colors.blue}\n          d={`\n            M2159.4,542.5\n            V604\n            c25.3-45.5,66.9-68.3,124.9-68.3\n            c41.9,0,76.8,13.7,104.9,41.1\n            c28.1,27.4,42.1,66.8,42.1,118.4\n            v224.3\n            h-47.6\n            V704\n            c0-41.4-10-72.9-30-94.5\n            c-20-21.6-47.4-32.4-82.1-32.4\n            c-34.7,0-62.1,10.8-82.1,32.4\n            c-20,21.6-30,53.1-30,94.5\n            v215.3\n            h-48.3\n            V542.5\n            H2159.4\n            z\n          `}\n        />\n        <path\n          id=\"letterD\"\n          fill={colors.blue}\n          d={`\n            M2559,870.3\n            c-34.5-37.3-51.8-84.8-51.8-142.5\n            c0-57.7,17.1-104.2,51.4-139.4\n            c34.3-35.2,77.9-52.8,130.8-52.8\n            c34,0,63.9,8.3,89.7,24.8\n            c25.8,16.6,44.9,38,57.3,64.2\n            v-216\n            h48.3\n            v510.7\n            h-48.3\n            v-82.8\n            c-12.4,26.2-31.5,47.7-57.3,64.5\n            c-25.8,16.8-55.7,25.2-89.7,25.2\n            C2637,926.2,2593.5,907.6,2559,870.3\n            z\n            M2795.3,842.4\n            c27.4-28.3,41.1-65.4,41.1-111.5\n            c0-46-13.7-83.2-41.1-111.5\n            c-27.4-28.3-60.4-42.4-99-42.4\n            s-71.5,13.6-98.7,40.7\n            c-27.2,27.2-40.7,63.8-40.7,110.1\n            c0,46.2,13.7,84,41.1,113.2\n            c27.4,29.2,60.3,43.8,98.7,43.8\n            C2735.1,884.8,2768,870.7,2795.3,842.4\n            z\n          `}\n        />\n        <path\n          id=\"letterE\"\n          fill={colors.blue}\n          d={`\n            M3145.6,926.2\n            c-53.8,0-97.5-17.9-131.1-53.8\n            c-33.6-35.9-50.4-83.2-50.4-141.8\n            s17.1-105.8,51.4-141.5\n            c34.3-35.7,78.7-53.5,133.2-53.5\n            c54.5,0,97.9,16.8,130.1,50.4\n            c32.2,33.6,48.3,75.2,48.3,124.9\n            c0,13.4-0.9,25.8-2.8,37.3\n            h-310.6\n            c1.8,43.3,14.9,77.3,39.3,102.1\n            c24.4,24.8,55.2,37.3,92.5,37.3\n            c29,0,53.7-6.7,74.2-20\n            c20.5-13.3,34.6-30.8,42.4-52.5\n            h51.8\n            c-12.4,32.2-32.7,58.8-60.7,79.7\n            C3225.2,915.8,3189.3,926.2,3145.6,926.2\n            z\n            M3277.4,710.2\n            c0-41.4-12.5-74.4-37.6-99\n            c-25.1-24.6-56.1-36.9-93.2-36.9\n            c-37,0-67.9,12.1-92.5,36.2\n            c-24.6,24.2-38.1,57.4-40.4,99.7\n            H3277.4\n            z\n          `}\n        />\n        <path\n          id=\"letterR\"\n          fill={colors.blue}\n          d={`\n            M3454.1,542.5\n            v62.1\n            c20.7-46,59.6-69,116.6-69\n            V586\n            h-13.8\n            c-33.1,0-58.6,9-76.3,26.9\n            c-17.7,17.9-26.6,48.8-26.6,92.5\n            v213.9\n            h-48.3\n            V542.5\n            H3454.1\n            z\n          `}\n        />\n        <path\n          id=\"letterA\"\n          fill={colors.blue}\n          d={`\n            M3677,870.3\n            c-34.5-37.3-51.8-84.8-51.8-142.5\n            c0-57.7,17.1-104.2,51.4-139.4\n            c34.3-35.2,77.9-52.8,130.8-52.8\n            c34,0,63.9,8.3,89.7,24.8\n            c25.8,16.6,44.9,38,57.3,64.2\n            v-82.1\n            h48.3\n            v376.8\n            h-48.3\n            v-82.8\n            c-12.4,26.2-31.5,47.7-57.3,64.5\n            c-25.8,16.8-55.7,25.2-89.7,25.2\n            C3755,926.2,3711.5,907.6,3677,870.3\n            z\n            M3913.3,842.4\n            c27.4-28.3,41.1-65.4,41.1-111.5\n            c0-46-13.7-83.2-41.1-111.5\n            c-27.4-28.3-60.4-42.4-99-42.4\n            s-71.5,13.6-98.7,40.7\n            c-27.2,27.2-40.7,63.8-40.7,110.1\n            c0,46.2,13.7,84,41.1,113.2\n            c27.4,29.2,60.3,43.8,98.7,43.8\n            C3853.1,884.8,3886,870.7,3913.3,842.4\n            z\n          `}\n        />\n        <path\n          id=\"letterL\"\n          fill={colors.blue}\n          d={`\n            M4313.3,443.1\n            h48.3\n            v438.9\n            h173.2\n            v37.3\n            h-221.5\n            V443.1\n            z\n          `}\n        />\n        <path\n          id=\"letterA\"\n          fill={colors.blue}\n          d={`\n            M4628,870.3\n            c-34.5-37.3-51.8-84.8-51.8-142.5\n            c0-57.7,17.1-104.2,51.4-139.4\n            c34.3-35.2,77.9-52.8,130.8-52.8\n            c34,0,63.9,8.3,89.7,24.8\n            c25.8,16.6,44.9,38,57.3,64.2\n            v-82.1\n            h48.3\n            v376.8\n            h-48.3\n            v-82.8\n            c-12.4,26.2-31.5,47.7-57.3,64.5\n            c-25.8,16.8-55.7,25.2-89.7,25.2\n            C4705.9,926.2,4662.5,907.6,4628,870.3\n            z\n            M4864.3,842.4\n            c27.4-28.3,41.1-65.4,41.1-111.5\n            c0-46-13.7-83.2-41.1-111.5\n            c-27.4-28.3-60.4-42.4-99-42.4\n            s-71.5,13.6-98.7,40.7\n            c-27.2,27.2-40.7,63.8-40.7,110.1\n            c0,46.2,13.7,84,41.1,113.2\n            c27.4,29.2,60.3,43.8,98.7,43.8\n            C4804.1,884.8,4837,870.7,4864.3,842.4\n            z\n          `}\n        />\n        <path\n          id=\"letterB\"\n          fill={colors.blue}\n          d={`\n            M5252.5,535.6\n            c52.9,0,96.5,17.6,130.8,52.8\n            c34.3,35.2,51.4,81.7,51.4,139.4\n            c0,57.7-17.3,105.2-51.8,142.5\n            c-34.5,37.3-78,55.9-130.4,55.9\n            c-34.1,0-64-8.4-89.7-25.2\n            c-25.8-16.8-44.9-38.3-57.3-64.5\n            v82.8h-48.3\n            V408.6\n            h48.3\n            v216\n            c12.4-26.2,31.5-47.6,57.3-64.2\n            C5188.6,543.9,5218.5,535.6,5252.5,535.6\n            z\n            M5244.9,884.8\n            c38.6,0,71.7-14.6,99-43.8\n            c27.4-29.2,41.1-66.9,41.1-113.2\n            c0-46.2-13.6-82.9-40.7-110.1\n            c-27.2-27.1-60.2-40.7-99-40.7\n            c-38.9,0-71.9,14.1-99,42.4\n            c-27.2,28.3-40.7,65.5-40.7,111.5\n            c0,46,13.6,83.2,40.7,111.5\n            C5173.4,870.7,5206.3,884.8,5244.9,884.8\n            z\n          `}\n        />\n        <path\n          id=\"letterS\"\n          fill={colors.blue}\n          d={`\n            M5503.7,646.7\n            c0-31.3,12.9-57.6,38.6-79\n            c25.8-21.4,58.7-32.1,98.7-32.1\n            s71.2,10.5,93.5,31.4\n            c22.3,20.9,34.6,49.8,36.9,86.6\n            h-49.7\n            c-0.9-23-8.7-42-23.5-56.9\n            c-14.7-14.9-35.2-22.4-61.4-22.4\n            c-26.2,0-46.8,6.4-61.8,19.3\n            c-15,12.9-22.4,28.4-22.4,46.6\n            c0,18.2,5.5,32.6,16.6,43.1\n            c11,10.6,25,17.7,41.8,21.4\n            c16.8,3.7,35,8.1,54.5,13.1\n            c19.6,5.1,37.7,10.5,54.5,16.2\n            c16.8,5.8,30.7,16.1,41.8,31.1\n            c11,15,16.6,34.2,16.6,57.6\n            c0,30.4-12.7,55.2-38,74.5\n            c-25.3,19.3-58.6,29-99.7,29\n            c-41.2,0-73.7-10.6-97.7-31.7\n            c-23.9-21.2-37-49.9-39.3-86.3\n            h49.7\n            c0.9,23.5,9.2,42.6,24.8,57.3\n            c15.6,14.7,37.1,22.1,64.5,22.1\n            c27.4,0,48.7-5.9,63.8-17.6\n            c15.2-11.7,22.8-26.8,22.8-45.2\n            c0-18.4-5.5-32.9-16.6-43.5\n            c-11-10.6-25-17.8-41.8-21.7\n            c-16.8-3.9-35-8.4-54.5-13.5\n            c-19.6-5.1-37.7-10.4-54.5-15.9\n            c-16.8-5.5-30.7-15.4-41.8-29.7\n            C5509.2,686.3,5503.7,668.4,5503.7,646.7\n            z\n          `}\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nvar Slide = () => (\n  <SlideTemplate>\n    <BulletPoint alwaysShow={true}>Check out our logo!</BulletPoint>\n    <SlideItem alwaysShow={true} tag=\"svg\" viewBox=\"0 0 700 500\">\n      <g transform=\"translate(-55, -55)\">\n        <PanderaLabsLogo viewBox=\"0 0 5800 2500\" />\n      </g>\n    </SlideItem>\n  </SlideTemplate>\n)\n\nrender(<Slide />);\n",
    "styles": "#contents {\n  box-shadow: var(--main-box-shadow);\n}",
    "datasetName": ""
  },
  "5": {
    "slideNumber": 5,
    "title": "Line Chart Example",
    "code": "var margin = { top: 10, right: 20, bottom: 30, left: 30 };\nvar width = 800 - margin.left - margin.right;\nvar height = 770 - margin.top - margin.bottom;\n\nvar svg = d3.select('.chart')\n  .append('svg')\n  .attr('width', width + margin.left + margin.right)\n  .attr('height', height + margin.top + margin.bottom)\n  .call(responsivefy)\n  .append('g')\n  .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\nvar data = currentData.map(company => ({\n  ...company,\n  values: company.values.map(d => ({\n    date: d3.timeParse('%Y/%m/%d')(d.date),\n    close: +d.close\n  }))\n}));\n\nvar xScale = d3.scaleTime()\n  .domain([\n    d3.min(data, co => d3.min(co.values, d => d.date)),\n    d3.max(data, co => d3.max(co.values, d => d.date)),\n  ])\n  .range([margin.left, width - margin.right])\n\nvar xAxis = g => g\n  .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n  .call(d3.axisBottom(xScale).ticks(width / 80));\n\nsvg\n  .append(\"g\")\n  .call(xAxis);\n\nvar yScale = d3.scaleLinear()\n  .domain([\n    d3.min(data, co => d3.min(co.values, d => d.close)),\n    d3.max(data, co => d3.max(co.values, d => d.close)),\n  ])\n  .range([height - margin.bottom, margin.top])\n\nvar yAxis = g => g\n  .attr(\"transform\", `translate(${margin.left},0)`)\n  .call(d3.axisLeft(yScale));\n\nsvg\n  .append(\"g\")\n  .call(yAxis);\n\nvar line = d3.line()\n  .x(d => xScale(d.date))\n  .y(d => yScale(d.close))\n  .curve(d3.curveCatmullRom.alpha(0.5))\n\nsvg\n  .selectAll('.line')\n  .data(data)\n  .enter()\n  .append('path')\n  .attr('class', 'line')\n  .attr('d', d => line(d.values))\n  .attr('stroke', (d, i) => ['#FF9900', '#3369e8'][i])\n  .attr('stroke-width', 2)\n  .attr('fill', 'none');\n",
    "styles": "#contents {\n  box-shadow: var(--main-box-shadow);\n}",
    "datasetName": "stocks"
  },
  "6": {
    "slideNumber": 6,
    "title": "Slide 3",
    "code": "// This is some test code.",
    "styles": "#contents {\n  box-shadow: var(--main-box-shadow);\n}",
    "datasetName": ""
  }
}
