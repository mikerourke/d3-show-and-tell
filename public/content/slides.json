{
  "1": {
    "title": "Slide 1",
    "code": "var margin = { top: 10, right: 20, bottom: 30, left: 30 };\nvar width = 800 - margin.left - margin.right;\nvar height = 770 - margin.top - margin.bottom;\n\nvar svg = d3.select('.chart')\n  .append('svg')\n  .attr('width', width + margin.left + margin.right)\n  .attr('height', height + margin.top + margin.bottom)\n  .call(responsivefy)\n  .append('g')\n  .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\nvar data = currentData.map(company => ({\n  ...company,\n  values: company.values.map(d => ({\n    date: d3.timeParse('%Y/%m/%d')(d.date),\n    close: +d.close\n  }))\n}));\n\nvar xScale = d3.scaleTime()\n  .domain([\n    d3.min(data, co => d3.min(co.values, d => d.date)),\n    d3.max(data, co => d3.max(co.values, d => d.date)),\n  ])\n  .range([margin.left, width - margin.right])\n\nvar xAxis = g => g\n  .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n  .call(d3.axisBottom(xScale).ticks(width / 80));\n\nsvg\n  .append(\"g\")\n  .call(xAxis);\n\nvar yScale = d3.scaleLinear()\n  .domain([\n    d3.min(data, co => d3.min(co.values, d => d.close)),\n    d3.max(data, co => d3.max(co.values, d => d.close)),\n  ])\n  .range([height - margin.bottom, margin.top])\n\nvar yAxis = g => g\n  .attr(\"transform\", `translate(${margin.left},0)`)\n  .call(d3.axisLeft(yScale));\n\nsvg\n  .append(\"g\")\n  .call(yAxis);\n\nvar line = d3.line()\n  .x(d => xScale(d.date))\n  .y(d => yScale(d.close))\n  .curve(d3.curveCatmullRom.alpha(0.5))\n\nsvg\n  .selectAll('.line')\n  .data(data)\n  .enter()\n  .append('path')\n  .attr('class', 'line')\n  .attr('d', d => line(d.values))\n  .attr('stroke', (d, i) => ['#FF9900', '#3369e8'][i])\n  .attr('stroke-width', 2)\n  .attr('fill', 'none');\n",
    "datasetName": "stocks"
  },
  "2": {
    "title": "Slide 2",
    "code": "console.log('Yay')",
    "datasetName": ""
  }
}
